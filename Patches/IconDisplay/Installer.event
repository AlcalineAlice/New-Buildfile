#include "eastdlib.event"

PUSH

ORG $279B0 
jumpToHack(UnitDisplay)

//ORG $279E8 
//callHack_r3(IconDisplay)
ORG $279D6
SHORT $B408 // push {r3} 
jumpToHack(IconDisplay) 

// ldr r2 =OAMSize 
//ORG $279F6 
//SHORT 0x46C0 // Nop - normally ldr r3, =0x811 

POP 




ALIGN 4 
PUSH; ORG CurrentOffset+1
UnitDisplay:
POP; #incbin "UnitDisplay.dmp"
POIN IconDisplayList
POIN CheckTrainerFlag

ALIGN 4 
PUSH; ORG CurrentOffset+1
IconDisplay:
POP; #incbin "IconDisplay.dmp"
POIN IconDisplayList



ALIGN 4
IconDisplayList:
//BYTE 0 // Any Unit ID 
//BYTE 0 // Any Class 
//SHORT 0 // Any flag 
//BYTE 0xFF // Any chapter 
//BYTE 0xFF // Default ObjTileID 
//BYTE 0 // padding 
//BYTE 0 // Padding 


BYTE 0xE0 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE1 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE2 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE3 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE4 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE5 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE6 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE7 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE8 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xE9 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xEA 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xEB 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xEC 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xED 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xEE 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 
BYTE 0xEF 	0; SHORT 0; 		BYTE 0xFF 0x50 1 0 


WORD 0xFFFFFFFF 0xFFFFFFFF // terminator 




