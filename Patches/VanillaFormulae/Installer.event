// Hit rate & avoid formula by bpat 
// > this does hit = 2.5*skill + 0.5*luck and avo = spd + 2*luck
// made hitrate do skill*4 + 0.5*luck now 

// I could instead do something like.. 
// Weapon accuracy + ((wep acc * ((skill*2)+1)) / 100) + skill + (luk/2)

#include "PB_Calc_Loop_Effects/Installer.event"


PUSH 

ORG $2ABB8
jumpToHack(HitRateLabel)

//ORG $2ABE8
//jumpToHack(AvoidLabel)


ORG $2AE54
jumpToHack_r0(NegateDefHack)

//ORG $25180  - This didn't work properly for some reason. It seemed to work in my context the first few iterations, but it led to a jump to d002d000 or something eventually 
//jumpToHack_r3(AddUnitToTargetListHack)

ORG $24EE4
jumpToHack_r1(ForEachUnitInRangeHack)

POP

// 2B718 nosferatu effect ? 

//#include "WeaponsRestorePercentHealthHack.lyn.event"

#include "ForEachUnitInRangeHack.lyn.event"


ALIGN 4
HitRateLabel:
#incbin "hitratehack.dmp"

ALIGN 4
AvoidLabel:
#incbin "avoidhack.dmp"

ALIGN 4
#include "AddUnitToTargetListHack.lyn.event"


ALIGN 4 
NegateDefHack:
#include "NegateDefHack.lyn.event"
POIN NegateDefAmountTable

#define FF16 "0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF"

ALIGN 4 
NegateDefAmountTable:
BYTE FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16 FF16
WORD 0 
//ORG CurrentOffset+256 
#undef FF16 

#define NegateDefEntry(ItemID, PercentDefToIgnore) "PUSH; ORG NegateDefAmountTable + (ItemID); BYTE PercentDefToIgnore; POP" 


NegateDefEntry(Constrict     , 63)
NegateDefEntry(Flash         , 63)
NegateDefEntry(Growl         , 63)
NegateDefEntry(Leer          ,  63)
NegateDefEntry(SandAttack    , 63)
NegateDefEntry(TailWhip      , 63)
NegateDefEntry(Snarl          , 63)   






