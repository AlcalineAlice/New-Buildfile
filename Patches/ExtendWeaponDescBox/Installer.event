

#define MaxDescLines 4 // vanilla is 3 
#define VramAddrDef 0x6013000 // vanilla 
//#define VramAddrDef 0x6013000 
// 6015880 // 6016080

#ifndef CallHackNew 
	#define callHackNew(offset) 		"BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
#endif 




// 12e6a 
ALIGN 4 
InitItemDescVram: 
#incbin "InitItemDescVram.dmp" 
WORD MaxDescLines 
WORD VramAddrDef 

ALIGN 4 
InitProcTextHandles:
#incbin "InitProcTextHandles.dmp" 
WORD MaxDescLines 


ALIGN 4 
InitWepDescTextHandles:
#incbin "InitWepDescTextHandles.dmp" 
WORD MaxDescLines 

ALIGN 4 
YPosDescBox:
#incbin "YPosDescBox.dmp" 





PUSH 
ORG $31644 // unlock supply 
BYTE 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

ORG $8A126 
SHORT $46C0 // nop 
callHackNew(InitItemDescVram|1)
SHORT $46C0 $46C0 $46C0 

ORG $8A064 
callHackNew(InitProcTextHandles|1) 

ORG $89874 
callHackNew(InitWepDescTextHandles|1) 

ORG $88C88 
callHackNew(YPosDescBox|1) // make it 0 if it's negative 

ORG $899BC 
BYTE MaxDescLines<<4
ORG $899C0
BYTE MaxDescLines<<4

// [203E7C4]!!
ORG $898A4 // default: used by shop, stat screen, send item to supply, itemMenu, and trading on map 
//WORD 0x6012000 //VramAddrDef // 13000 vanilla
// shop and stat screen should use 12000 
// send item to supply and itemMenu should use 13000 [r0=6014800]

// This makes trading display normally 
ORG $2D2EA // mov r1, #0x90 
BYTE 0xE1			// lsl r1, #7  = 0x4800 as vram offset to use // 7080 
//ORG $ADB7C // StartSmallBrownNameBoxes (for trading) is called shortly after the prior org 


ORG $89F0C4 
WORD VramAddrDef // 12000 vanilla

//ORG $98998 
//WORD VramAddrDef // 14000 vanilla

ORG $9B970 // Preps 
WORD 0x6012000 
//VramAddrDef // 14000 vanilla 

//ORG $9D9FC // Supply 
//WORD 0x6012000 // 13000 vanilla 

ORG $9F0C4 // List 
WORD VramAddrDef // 12000 vanilla 



POP 





