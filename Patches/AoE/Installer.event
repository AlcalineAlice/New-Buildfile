#ifdef DEBUG_MODE

// Hooks: $1DA98 and $1D9DC 
// this is to display purple tiles while selecting an area to attack 

//#ifndef SKILLSYSTEM_SKILL_TESTER
	//#define SKILLSYSTEM_SKILL_TESTER SkillTester
//#endif
MapDisplay:
#include	"TilePalettes/_1D9DC_Loop6C_MoveLimitView.lyn.event"

PUSH 

ORG $1DA98 
jumpToHack(PurpleMovementSquares|1)

ORG	$1D9DC
jumpToHack(_1D9DC_Loop6C_MoveLimitView)

POP 




ALIGN 4
RangeSquarePurplePalette:
#incbin "TilePalettes/RangeSquaresPurplePalette.dmp"


ALIGN 4
PurpleMovementSquares:
#include "TilePalettes/PurpleMovementSquares.lyn.event"



#include "FreeSelect/FreeSelect6C.event"
#include "_6C_Basic_Cases/_Staff6C_BasicCases.event"
#ifndef rfStaffTargeting
	#define rfStaffTargeting(routine, rangefunc, procpoin) "SHORT 0x1C28 0x1C22 0x4903 0x4B04; BL(routine); SHORT 0xBC30 0xBC01 0x4700 0x0; POIN (rangefunc|1) procpoin"
#endif 


#include "AoE.lyn.event"
#include "CreateRangeMapFromTemplateByStanH.lyn.event" 
#include "CreateMoveMapFromTemplate.lyn.event" 


#include "AoE_RangeTemplates.event"
#include "AoE_CallSubmenuEffect.lyn.event"
#include "AoE_DamageEffect.lyn.event" 


#define AoE_EntrySizeDef 32 // 32 bytes per AoE table entry 
#define AoE_TableTerminator "WORD 0 0 0 0 0 0 0 0"
#define AoE_RamAddressDef "0x0203F101"



/*
ALIGN 4 
AoE_Table: 
POIN AdditionalUsabilityRoutine // Eg. for SkillTester, if desired (It's given r0 = AoE Effect Index #)
BYTE Unit Class Level Flag 
BYTE Item 0 WeaponType ReqWeaponExp
BYTE FriendlyFireBool FixedDamageBool MagBasedBool HitResBool 
BYTE DepleteItemBool UsableOnlyIfStationaryBool HpCost HealBool
BYTE DmgOrMtLowerBound DmgUpperBound MinRange MaxRange
POIN OptionalAddedRoutineForAnimations
POIN RangeMaskTable 
WORD 0 0 0 0 0 0 0 0 // Terminator
*/
ALIGN 4
AoE_EntrySize:
BYTE AoE_EntrySizeDef

ALIGN 4
AoE_RamAddress:
WORD AoE_RamAddressDef


ALIGN 4 
AoE_Table:
// Entry 
POIN 0
BYTE 0 0 0 0 // 4
BYTE 0x6C 0 0 0 // Always usable by anyone 
BYTE 0 1 0 0 // 12 
BYTE 1 1 23 1 
BYTE 10 11 1 4 // 20 - 23 
POIN 0 
POIN RangeTemplate_Cross

// Entry 
POIN 0
BYTE 1 0 0 0 
BYTE 0 0 0 0 // Usable by Eirika 
BYTE 0 0 0 0 
BYTE 0 0 0 0 
BYTE 2 3 2 5
POIN 0 
POIN RangeTemplate_Square

POIN 0
BYTE 1 0 0 0 
BYTE 0 0 0 0 // Usable by Eirika 
BYTE 0 0 0 0 
BYTE 0 0 0 0 
BYTE 6 8 0 3
POIN 0 
POIN RangeTemplate_X



AoE_TableTerminator

ALIGN 4
AoESubmenuDef:
BYTE 0 //x coord
BYTE 3 //y coord
BYTE 8 //width
BYTE 0 //height
WORD 0 //Unknown
POIN AoEMenuCommandsList //menu commands ptr
WORD 0 //OnInit
WORD 0 //OnEnd
WORD 0 //Unknown
POIN 0x22861 //On B Press
POIN 0x4f521 //On R Press
POIN 0x4f459 //On Help Box


ALIGN 4
AoEHealingSubmenuDef:
BYTE 0 //x coord
BYTE 3 //y coord
BYTE 8 //width
BYTE 0 //height
WORD 0 //Unknown
POIN AoEHealingMenuCommandsList //menu commands ptr
WORD 0 //OnInit
WORD 0 //OnEnd
WORD 0 //Unknown
POIN 0x22861 //On B Press
POIN 0x4f521 //On R Press
POIN 0x4f459 //On Help Box


ALIGN 4
AoEMenuCommandsList:
MenuCommand(UM_BlazeName, UM_BlazeDesc, NormalText, AoE_0Usability|1, AoE_0Effect|1)
MenuCommand(UM_TorrentName, UM_TorrentDesc, NormalText, AoE_1Usability|1, AoE_1Effect|1)
MenuCommand(UM_OvergrowthName, UM_OvergrowthDesc, NormalText, AoE_2Usability|1, AoE_2Effect|1)


UM_Separator 


ALIGN 4
AoEHealingMenuCommandsList:
MenuCommand(UM_Smite, UM_AoEDesc, NormalText, AoE_0Usability|1, AoE_0Effect|1)
MenuCommand(UM_Pivot, UM_AoEDesc, NormalText, AoE_1Usability|1, AoE_1Effect|1)
UM_Separator 


ALIGN 4 
AoE_0Usability:
#include "AoE_SpecificUsability.lyn.event"
WORD 0 // Skill ID (If applicable)
WORD 0 // Effect Index ID 


ALIGN 4 
AoE_1Usability:
#include "AoE_SpecificUsability.lyn.event"
WORD 0
WORD 1

ALIGN 4 
AoE_2Usability:
#include "AoE_SpecificUsability.lyn.event"
WORD 0
WORD 2

// stores the index byte to ram, then starts AoE_Setup
ALIGN 4
AoE_0Effect:
#include "AoE_SpecificEffect.lyn.event"
WORD 0
WORD 0 //AoE effect ID 

ALIGN 4
AoE_1Effect:
#include "AoE_SpecificEffect.lyn.event"
WORD 0
WORD 1 //AoE effect ID 

ALIGN 4
AoE_2Effect:
#include "AoE_SpecificEffect.lyn.event"
WORD 0
WORD 2 //AoE effect ID 


ALIGN 4
AoE_FreeSelect:
POIN AoE_fsStart | 1          // On create
POIN Staff6C_fsDelete | 1           // On delete
POIN InvalidCursorByRangeMap_2 | 1    // On cursor movement
POIN TargetTileConfirm_2 | 1          // On A press
POIN AoE_FS6C_ButtonPress_Cancel | 1    // On B press
WORD 0                              // On R press
CommandDefEnd

ALIGN 4
AoE_HealFreeSelect: // identical except green tiles 
POIN AoE_HealfsStart | 1          // On create
POIN Staff6C_fsDelete | 1           // On delete
POIN InvalidCursorByRangeMap_2 | 1    // On cursor movement
POIN TargetTileConfirm_2 | 1          // On A press
POIN AoE_FS6C_ButtonPress_Cancel | 1    // On B press
WORD 0                              // On R press
CommandDefEnd

	//range square colors for the macro
#ifndef rsMove 
	#define rsMove	0x1
	#define rsRed	0x2
	#define rsGreen	0x4
	#define rsBlue	0x10 // identical to move ? 
	#define movementRed 0x20 
	#define movementPurple 0x40 
#endif 



ALIGN 4
AoE_fsStart:
StaffTargetInit(UM_AoEHelp, rsRed, Staff6C_fsStart) 

AoE_HealfsStart:
StaffTargetInit(UM_AoEHealHelp, rsGreen, Staff6C_fsStart) 

ALIGN 4
InvalidCursorByRangeMap_2:
#incbin "InvalidCursorByRangeMap.dmp"
POIN OptionalAdditionalRangeSelectionCheck

ALIGN 4
OptionalAdditionalRangeSelectionCheck:
#incbin "OptionalAdditionalRangeSelectionCheck.dmp"

ALIGN 4
TargetTileConfirm_2:
#include "TargetTileConfirm.lyn.event"
POIN OptionalAdditionalRangeSelectionCheck












#endif 






