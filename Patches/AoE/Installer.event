// Hooks: $1DA98 and $1D9DC 
// this is to display purple tiles while selecting an area to attack 
// briefly uses a byte in ram at 0x0203F101, which combat arts also use. 
// it should not conflict with combat arts. 
#include "Internals.event"




ALIGN 4
AoE_Animation_Table: // 12 bytes per entry 
POIN 0 //AnimationRouine
POIN 0 //EventAddress 
SHORT 0 //Sfx 
SHORT 1 // so we don't hide data in febuilder early 

POIN 0 //AoE_ShowBrokenWall_Vertical //Entry 1 
POIN RocksEvent
SHORT 0 
SHORT 1 

POIN 0 // Entry 2
POIN ExampleLightRuneEvent
SHORT 0 
SHORT 1 

POIN 0x807AD09 // Entry 3 - summon gfx 
POIN 0 //ExampleLightRuneEvent
SHORT 0 
SHORT 1 

WORD 0 0 0 // INDEXED, so no terminator actually needed 




ExampleLightRuneEvent:
AddAnimTrap(LightRuneTrapID)
STAL 22 
RemoveTrap 
SVAL rB 0
NoFade 
ENDA 

RocksEvent:
ASMC AoE_ShowBrokenWall_Vertical
ASMC AoE_ShowBrokenWall_Horizontal
//CALL RocksEventA
//CALL RocksEventB
NoFade 
ENDA 

RocksEventA:
ASMC AoE_ShowBrokenWall_Vertical
 
NoFade 
ENDA 

RocksEventB:
ASMC AoE_ShowBrokenWall_Horizontal
 
NoFade 
ENDA 



/*
@ Primary Table structure 
@ Usability Reqs 
.equ UnitByte, #0 
.equ ClassByte, #1 
.equ LevelByte, #2 
.equ ItemByte, #3 
.equ FlagShort, #4 @and 5 
.equ SkillByte, #6 
@ 7 is padding - it does nothing 
@ Config 
.equ HpCostByte, #8
.equ ConfigByte, #9

.equ PowerLowerBoundByte, #10
.equ PowerUpperBoundByte, #11 
.equ MinRangeByte, #12
.equ MaxRangeByte, #13 
.equ RangeMaskByte, #14 
.equ Animation_ALL_IDByte, #15
.equ Animation_UNITS_IDByte, #16
.equ Animation_SELECTION_IDByte, #17 
@ 18 and 19 are padding 

*/

// Bitfield for more config options 
#define HealBool 0x01
#define FriendlyFireBool 0x02 
#define FixedDamageBool 0x04 
#define MagBasedBool 0x08 
#define HitResBool 0x10
#define DepleteItemBool 0x20
#define UsableOnlyIfStationaryBool 0x40 





ALIGN 4 
AoE_SkillIndexTable:
BYTE 0 0 0 0 0 0 0 0 
WORD 0xFFFFFFFF // Unnecessary Terminator 



ALIGN 4 
AoE_Table:
// Entry 
BYTE 0 0 0 0 
BYTE 0 0 0 0 // Always usable by anyone 
BYTE 0 FriendlyFireBool
BYTE 5 10 // damage range 
BYTE 0 4 // Attack range 
BYTE 0 0 // Index of RangeMask, AnimationALL,
BYTE 0 1 // Animation UNITS, Animation SELECTION 
ALIGN 4

// Entry 
BYTE 0 0 0 0 
BYTE 0 0 0 0 // Always usable by anyone 
BYTE 0 FriendlyFireBool
BYTE 5 10 // damage range 
BYTE 0 4 // Attack range 
BYTE 1 0 // Index of RangeMask, AnimationALL,
BYTE 0 2 // Animation UNITS, Animation SELECTION 
ALIGN 4
// Entry 
BYTE 0 0 0 0 
BYTE 0 0 0 0 // Always usable by anyone 
BYTE 0 FriendlyFireBool
BYTE 5 10 // damage range 
BYTE 0 4 // Attack range 
BYTE 2 0 // Index of RangeMask, AnimationALL,
BYTE 0 3 // Animation UNITS, Animation SELECTION 
ALIGN 4


AoE_TableTerminator







ALIGN 4
AoEMenuCommandsList:
MenuCommand(UM_BlazeName, UM_BlazeDesc, NormalText, AoE_0Usability|1, AoE_0Effect|1)
MenuCommand(UM_TorrentName, UM_TorrentDesc, NormalText, AoE_1Usability|1, AoE_1Effect|1)
MenuCommand(UM_OvergrowthName, UM_OvergrowthDesc, NormalText, AoE_2Usability|1, AoE_2Effect|1)
UM_Separator 




ALIGN 4 
AoE_0Usability:
#include "AoE_SpecificUsability.lyn.event"
WORD 0 // Skill ID (If applicable)
WORD 0 // Effect Index ID 


ALIGN 4 
AoE_1Usability:
#include "AoE_SpecificUsability.lyn.event"
WORD 0
WORD 1

ALIGN 4 
AoE_2Usability:
#include "AoE_SpecificUsability.lyn.event"
WORD 0
WORD 2

// stores the index byte to ram, then starts AoE_Setup
ALIGN 4
AoE_0Effect:
#include "AoE_SpecificEffect.lyn.event"
WORD 0
WORD 0 //AoE effect ID 

ALIGN 4
AoE_1Effect:
#include "AoE_SpecificEffect.lyn.event"
WORD 0
WORD 1 //AoE effect ID 

ALIGN 4
AoE_2Effect:
#include "AoE_SpecificEffect.lyn.event"
WORD 0
WORD 2 //AoE effect ID 





