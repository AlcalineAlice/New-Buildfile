#include "GenerateMap.lyn.event"
#include "Map/GeneratedInstaller.event"

#define RandomizedChapterID_Def 0x58 // Debug2 ChID  
#define Minimum_X_Size 15 
#define Minimum_Y_Size 10
#define Maximum_X_Size 35
#define Maximum_Y_Size 35




#define FrequencyOfObjects 100 // percent 
// note that this is just how often it will attempt to place things 
// there will always be empty tiles 


ALIGN 4 
GeneratedMapDimensions:
BYTE Minimum_X_Size Minimum_Y_Size Maximum_X_Size Maximum_Y_Size 

ALIGN 4 
FrequencyOfObjects_Link:
WORD FrequencyOfObjects 

ALIGN 4 
RandomizedChapterID_Link:
WORD RandomizedChapterID_Def

ALIGN 4
PUSH; ORG CurrentOffset+1
NewLoadChapterMap: ; POP 
#include "LoadChapterMap.lyn.event"

#include "InitClockAndMap.lyn.event" 




PUSH 

ORG $198AC 
jumpToHack(NewLoadChapterMap)

ORG $30E94

ORG $30E90
callHackNew(InitClockAndMap)
SHORT $46C0 $46C0 $46C0 $46C0 

//jumpToHack(InitClockAndMap)

//ORG $AA0DC
ORG $A9498 // ProcsSaveMenu
jumpToHack(NewInitRNG) // attempt to mess with RNG but idk if it does anything lol 
POP 

//ALIGN 4 
//hashArray:
//WORD 0


ALIGN 4 
NumberOfMapPieces: // automatically defined in GeneratedInstaller.event 
WORD NumberOfMapPiecesDef 


// no longer used 
// #define GenerateMapRam 0x203F7C4
//ALIGN 4 
//GenerateMapRam_Link:
//WORD GenerateMapRam





PUSH 

ORG $1D308 
jumpToHack(clearMinesHookNew) 

ORG $1CC20 
//callHackNew(initializeMinesProc)

ORG $1C948 // player phase main loop 
//callHackNew(initializeMines2) 


ORG $1DE18 
//jumpToHack(removeMinesHook) 
//SHORT $46c0 $46c0 

ORG $1CC30
//callHackNew(initializeMines)


ORG $1CD20 
//callHackNew(hookForMines)
ORG $1CE3C 
callHackNew(hookForMines2) 
SHORT 0x46C0 

ORG $1CD84 
//callHackNew(hookForMines3) 

//ORG $1CEB8 
//jumpToHack(clearMinesHook) 

POP 


PlaceMinesEvent:
ASMC RandomlyPlaceMines|1 
NoFade 
ENDA 

#include "hookForMines.lyn.event" 

#define FREQUENCY_OF_MINES_DEF 50 // % of tiles will have mines 

ALIGN 4 
FREQUENCY_OF_MINES:
WORD FREQUENCY_OF_MINES_DEF


ALIGN 4; 
DefaultMovementCost:
BYTE 255 1 1 1 255 1 1 1 1 1 2 1 2 255 1 2 5 4 255 1 255 255 255 1 1 255 255 255 1 2 255 1 1 1 255 1 1 2 255 2 2 2 1 1 255 1 255 1 1 255 255 255 1 255 255 1 1 255 255 255 255 255 1 255 255 //01 Lord

ALIGN 4
CreateMinesProc:
PROC_YIELD // Buffer.
PROC_SET_NAME(CallMinesProcName)
PROC_SLEEP(0)
//PROC_LOOP_ROUTINE(CallMinesFunc)
//PROC_CALL_ROUTINE(RandomlyPlaceMines|1)
PROC_LOOP_ROUTINE(CallMinesFunc)
PROC_SLEEP(0)
PROC_END


CallMinesProcName:
String("Minesweeper") ; BYTE 0
ALIGN 4


