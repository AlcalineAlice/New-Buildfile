PUSH
ORG 0x19900
POIN TileConfigPLIST

ORG 0x19968
POIN ObjTypePalettePLIST

ORG 0x1999C
POIN ObjTypePalettePLIST

ORG 0x30134
POIN TileAnimPLIST

ORG 0x30C78
POIN TileAnimPLIST

ORG 0x34680
POIN MapPLIST

ORG 0x346AC
POIN MapChangesPLIST

ORG 0xB3018
POIN MapChangesPLIST

ORG 0xC66E8
POIN MapChangesPLIST

POP


ALIGN 4

    //MESSAGE tile config plist space starts at currentOffset

TileConfigPLIST:
ORG TileConfigPLIST + (0x4 * 0xFF)


    //MESSAGE tile config plist space starts at currentOffset

ObjTypePalettePLIST:
ORG ObjTypePalettePLIST + (0x4 * 0xFF)

TileAnimPLIST:
ORG TileAnimPLIST + (0x4 * 0xFF)

MapPLIST:
ORG MapPLIST + (0x4 * 0xFF)

MapChangesPLIST:
ORG MapChangesPLIST + (0x4 * 0xFF)


#define TileConfigPointerTable(aId, apointer) "PUSH; ORG TileConfigPLIST+(0x4 * aId); POIN apointer; POP"
// Confchip_config

#define ObjTypePalettePointerTable(aId, apointer) "PUSH; ORG ObjTypePalettePLIST+(0x4 * aId); POIN apointer; POP"
// 


#define TileAnimPointerTable(aId, apointer) "PUSH; ORG TileAnimPLIST+(0x4 * aId); POIN apointer; POP"

//Map_Pointer_Table and ConfChangesPointerTable ? 



#define Map_Pointer_Table(aId, apointer) "PUSH; ORG MapPLIST+(4*aId); POIN apointer; POP"
#define Map_Pointer_Table2(aId, apointer) "PUSH; ORG MapPLIST+(4*aId); WORD apointer; POP"

// By default, TMX2EA generates this: 
//EventPointerTable(ViridianForestNCh, MapChanges)
// but we want it to make this instead: 
#define MapChangesPointerTable(aId, apointer) "PUSH; ORG MapChangesPLIST+(0x4 * aId); POIN apointer; POP"


// Vesly added for convenience 
// But you could edit this in your csv if you prefer 
#define EventsIDEntry(ChapterID) "PUSH; ORG NewChapterDataTable +(148 * ChapterID)+ 116 ; BYTE ChapterID+1; POP" // 116 is the offset of the EventsID byte, while each row has 148 bytes of data  

// if you really want to have it not just be identical to your chapter ID+1, then use this below I guess 
#define EventsIDEntry(ChapterID, EventID) "PUSH; ORG NewChapterDataTable +(148 * ChapterID)+ 116 ; BYTE EventID; POP" // 116 is the offset of the EventsID byte, while each row has 148 bytes of data  

// to do: test & use these so I don't have to manually type them in the csv lol 














// -------------------------------Palette-------------------------------




// -------------------------------Tile Anims-------------------------------

#define ConfAnimsTiles(duration, tileSize, imgPointer) "SHORT duration tileSize; POIN imgPointer"

//<property name="Anims" value="WaterAnimation"/>

//#define CaveTileAnims 1
//TileAnimPointerTable(CaveTileAnims, CaveTileAnimsData)

#include "TilesetAnimations/Water/WaterAnimsInstaller.event"
#define WaterAnimations 1 
#define WaterAnimation 1

TileAnimPointerTable(WaterAnimations, WaterTilesetAnimation)
TileAnimPointerTable(5, 0x59D498)
TileAnimPointerTable(0x12, 0x0859D568)
TileAnimPointerTable(0x1C, 0x0859D6F8)
TileAnimPointerTable(0x54, 0x0859D800)
TileAnimPointerTable(0x7D, 0x0859D678)
TileAnimPointerTable(0xD3, 0x0859D520)












// ------------------------------- MAP CHANGES ----------------------------

// #define MapChangesPointerTable(aId, apointer) "PUSH; ORG MapChangesPLIST+(0x4 * aId); POIN apointer; POP"

// to do: make this part of the automation 
// they just need to be put in the definitions automation part 
// functionally it doesn't really matter what numbers they have 
// so you could probably just do WhicheverCh and it'd work fine 
#define ViridianForestNMapChanges 120 
#define SaffronGymMapChanges 121 
#define Route21MapChanges 122
#define MansionB1MapChanges 123
#define MansionB2MapChanges 124
#define MansionB3MapChanges 125
#define MansionB4MapChanges 126





#include "GeneratedInstaller.event"

ALIGN 4


#include "Master Map Installer.event"


