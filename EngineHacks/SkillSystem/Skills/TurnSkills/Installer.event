#include "UseItemEffect/Installer.event" 
#include "dmp/RallyChaos.lyn.event" 
#include "dmp/HoardersBane.lyn.event" 

ALIGN 4 
RallyChaosID_Link: 
WORD RallyChaosID 

HoardersBaneID_Link: 
WORD HoardersBaneID 

ALIGN 4 
HoardersBaneHealEvent: 
CALL UseVulneraryEvent
NoFade 
ENDA 



ALIGN 4
RallyChaosProc: // Block this proc if you'd like to show animations 
PROC_YIELD // Buffer.
PROC_SET_NAME(RallyChaosName)
PROC_SLEEP(0)
PROC_CALL_ROUTINE(RallyChaosInit) 
PROC_LABEL(0)
PROC_CALL_ROUTINE(RallyChaosFunc)
PROC_LOOP_ROUTINE(RallyChaosIdle)

PROC_LABEL(2) 
PROC_END_ALL(0x859A548) // destroy camera proc that moves to Lord at start of phase 
PROC_CALL_ROUTINE(Buff_EnsureCamera)
PROC_LOOP_ROUTINE(BuffWaitForCamera)
PROC_LABEL(3) 
PROC_CALL_ROUTINE(RallyChaosExecute) 
PROC_LOOP_ROUTINE(RallyChaosIdle)

PROC_LABEL(1) // Destructor 
PROC_END


RallyChaosName:
String("RallyChaos") ; BYTE 0
ALIGN 4


ALIGN 4 
HoardersBaneProc:
PROC_SET_NAME(HoardersBaneName)
PROC_YIELD // Buffer 
PROC_LABEL(0) 
PROC_CALL_ROUTINE_2(HoardersBaneFunc) // Yield for a frame if returns 0; this is required for blocking children 
//PROC_CALL_BLOCKING_CHILD(WaitForVulneraryEndProc)
PROC_GOTO(0)
PROC_LABEL(1)
PROC_END


ALIGN 4
WaitForVulneraryEndProc:	//HINT=PROCS
PROC_SET_NAME(WaitForVulneraryEndName)
PROC_YIELD // Buffer 
PROC_CALL_ROUTINE(Buff_EnsureCamera)
PROC_LOOP_ROUTINE(BuffWaitForCamera)
PROC_LOOP_ROUTINE(WaitForVulneraryEnd)
PROC_END

ALIGN 4
HoardersBaneName:
String(HoardersBane);	BYTE 0x0

ALIGN 4
WaitForVulneraryEndName:
String(WaitForVulneraryEnd);	BYTE 0x0




