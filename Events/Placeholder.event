
// Placeholder events for any chapter that doesn't have them written 
// So you can walk around in the map and be auto refreshed 


EventPointerTable(OaksLabCh,ThisChapter)
EventPointerTable(Route1Ch,ThisChapter)
EventPointerTable(ViridianCh,ThisChapter)
EventPointerTable(Route2SCh,ThisChapter)
EventPointerTable(ViridianForestSCh,ThisChapter)
EventPointerTable(ViridianForestNCh,ThisChapter)
EventPointerTable(CeladonCh                        ,ThisChapter)
EventPointerTable(CeladonGymCh                     ,ThisChapter)
EventPointerTable(CeruleanCh                       ,ThisChapter)
EventPointerTable(CeruleanGymCh                    ,ThisChapter)
EventPointerTable(CinnabarCh                       ,ThisChapter)
EventPointerTable(CinnabarGymCh                    ,ThisChapter)
EventPointerTable(DiglettsCaveCh                   ,ThisChapter)
EventPointerTable(FuschiaCh                        ,ThisChapter)
EventPointerTable(FuschiaGymCh                     ,ThisChapter)
EventPointerTable(LavendarCh                       ,ThisChapter)
EventPointerTable(MtMoonB1Ch                       ,ThisChapter)
EventPointerTable(MtMoonB2Ch                       ,ThisChapter)
EventPointerTable(MtMoonB3Ch                       ,ThisChapter)
EventPointerTable(OaksLabCh                        ,ThisChapter)
EventPointerTable(PalletCh                         ,ThisChapter)
EventPointerTable(PewterCh                         ,ThisChapter)
EventPointerTable(PewterGymCh                      ,ThisChapter)
EventPointerTable(PokecenterCh                     ,ThisChapter)
EventPointerTable(PokemonTowerF1Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF2Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF3Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF4Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF5Ch                 ,ThisChapter)
EventPointerTable(RockTunnelB1Ch                   ,ThisChapter)
EventPointerTable(RockTunnelB2Ch                   ,ThisChapter)
EventPointerTable(Route1Ch                         ,ThisChapter)
EventPointerTable(Route10Ch                        ,ThisChapter)
EventPointerTable(Route11Ch                        ,ThisChapter)
EventPointerTable(Route12NCh                       ,ThisChapter)
EventPointerTable(Route12SCh                       ,ThisChapter)
EventPointerTable(Route13Ch                        ,ThisChapter)
EventPointerTable(Route14Ch                        ,ThisChapter)
EventPointerTable(Route15Ch                        ,ThisChapter)
EventPointerTable(Route16Ch                        ,ThisChapter)
EventPointerTable(Route17NCh                       ,ThisChapter)
EventPointerTable(Route17SCh                       ,ThisChapter)
EventPointerTable(Route18Ch                        ,ThisChapter)
EventPointerTable(Route19Ch                        ,ThisChapter)
EventPointerTable(Route20ECh                       ,ThisChapter)
EventPointerTable(Route20WCh                       ,ThisChapter)
EventPointerTable(Route21Ch                        ,ThisChapter)
EventPointerTable(Route22Ch                        ,ThisChapter)
EventPointerTable(Route23MCh                       ,ThisChapter)
EventPointerTable(Route23NCh                       ,ThisChapter)
EventPointerTable(Route23SCh                       ,ThisChapter)
EventPointerTable(Route24Ch                        ,ThisChapter)
EventPointerTable(Route25Ch                        ,ThisChapter)
EventPointerTable(Route2NCh                        ,ThisChapter)
EventPointerTable(Route2SCh                        ,ThisChapter)
EventPointerTable(Route3Ch                        ,ThisChapter)
EventPointerTable(Route4ECh                        ,ThisChapter)
EventPointerTable(Route4WCh                        ,ThisChapter)
EventPointerTable(Route5Ch                         ,ThisChapter)
EventPointerTable(Route6Ch                         ,ThisChapter)
EventPointerTable(Route7Ch                         ,ThisChapter)
EventPointerTable(Route8Ch                         ,ThisChapter)
EventPointerTable(Route9ECh                        ,ThisChapter)
EventPointerTable(Route9WCh                        ,ThisChapter)
EventPointerTable(SaffronCh                        ,ThisChapter)
EventPointerTable(SaffronDojoCh                    ,ThisChapter)
EventPointerTable(SaffronGymCh                     ,ThisChapter)
EventPointerTable(SSAnneCh                         ,ThisChapter)
EventPointerTable(VermillionCh                     ,ThisChapter)
EventPointerTable(VermillionGymCh                  ,ThisChapter)
EventPointerTable(ViridianCh                       ,ThisChapter)
EventPointerTable(ViridianForestNCh                ,ThisChapter)
EventPointerTable(ViridianForestSCh                ,ThisChapter)
EventPointerTable(ViridianGymCh                    ,ThisChapter)




ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
END_MAIN

CharacterBasedEvents:
//CharacterEventBothWays(0x10,TalkEvent, Eirika, Ephraim)
END_MAIN

LocationBasedEvents:
//House(0,GiveExp, 11,11)


//Vendor(ShopItems,2,7)
//Armory(ArmoryItems,10,26)
//Village(0x8,VillageEvent,18,27)
//House(0,HouseEvent,6,24)
//Seize(10,2)
END_MAIN

GiveExp:
GiveEXP(0x7FFF, 100)
NoFade 
ENDA 

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
END_MAIN

Dunno1:
END_MAIN

Dunno2:
END_MAIN

Dunno3:
END_MAIN

Tutorial:
END_MAIN

Units1:
UNIT Eirika  CharmanderID 0x1 Level(5,Ally,True)   [5,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT Ephraim  PidgeyID 0x1 Level(5,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT Seth  RattataID 0x1 Level(5,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT


Units2:
UNIT Amelia MankeyID 0x1 Level(5,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT


MoreUnits:
UNIT CaellachCC 0x11 0x1 Level(5,Enemy,True) [0,0] 0b 0x0 0x0 0x0 [0x21,0x29,0x7C,0x0] [0x0,0x0,0x0,0x0]
UNIT


EnemyUnits:
UNIT 0x50 ClassRoute2NWildA 0x0 Level(1, Enemy, 1)   [12,16] 001b	0x0 0x01 REDA12R16 [0x0,0x0,0x0,0x0] [28,0,0,0] //ApproachEnemySummonAI //RunAwayAI
UNIT 0x50 OnixID 0x0 Level(1, Enemy, 1)   [13,11] 0b	0x0 0x01 REDA13R11 [Tackle,0x0,0x0,0x0] [0,0,0,32] //ApproachEnemySummonAI //RunAwayAI
UNIT 0x50 OnixID 0x0 Level(1, Enemy, 1)   [13,12] 0b	0x0 0x01 REDA13R12 [Tackle,0x0,0x0,0x0] [28,0,0,32] //ApproachEnemySummonAI //RunAwayAI
UNIT 0x50 ClassRoute2NWildA 0x0 Level(1, Enemy, 1)   [16,6] 001b	0x0 0x01 REDA16R6 [0x0,0x0,0x0,0x0] [28,0,0,32] //ApproachEnemySummonAI //RunAwayAI
UNIT


Traps1:
ENDTRAP
ALIGN 4

Traps2:
ENDTRAP
ALIGN 4


Units3:
UNIT 0x13  AerodactylID 0x1 Level(1,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 0x12  DragoniteID 0x1 Level(1,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 0x14 FearowID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 13  MewtwoID 0x1 Level(1,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 12  MewID 0x1 Level(1,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 14 SnorlaxID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]

UNIT 23  ZapdosID 0x1 Level(1,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 22  ArticunoID 0x1 Level(1,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT 24 MoltresID 0x1 Level(1,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]


UNIT


BeginningScene:

ENUF SkipIntroFlag

//ENUT 0xAC // Fast Movement 
//ENUT 0xAB 

Write_Byte(11, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(11, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

//21, 19
//Write_Byte(21, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
//Write_Byte(19, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

CALL GlobalBeginningScene
CALL CityBeginningScene
CALL LoadAndPlacePlayers 
//RandomizePlayerCoords(Ground, Range(0,0,2,2), Range(2,2,15,10)) //somewhere possible, hopefully ? 
LOAD1 1 EnemyUnits 
ENUN 
//LOAD1 1 Units3 
ENUN 
//AutoLevelUnits(3, True, 0x50FF)
RandomizeCoords(Ground, Range(0,0,2,2), Range(2,2,15,10))
LABEL 0x63
SetUnitStatus(1, CurrentHP, 5)
//AutoLevelUnits(19, True, 0x120) // all 



ENUT 0xAE  
NoFade
ENDA

TalkEvent:
NoFade
ENDA


EndingScene:
ASMC 0x85C71 0x381F5 0x37CF9 //show records screen
STAL 120
EVBIT_F 0x2
MNTS 0x1 //return to title screen
NoFade
ENDA

VillageEvent:
	VillageEventItem(VillageText, Village, Boots)

HouseEvent:
	// Set parameters
	SVAL r1 NiceThighsID
	SVAL r2 (-1) // (-1) is active unit
	
	// Check if unit has skill
	// If they have, goto label #0 (end)
	ASMC (ASMC_HasSkill|1)
	BNE 0 rC r0
	
	// Learn skill to unit
	ASMC (ASMC_LearnNewSkill|1)
	
LABEL 0
	// end
	
	Text(HouseText)
	
	NoFade
	ENDA
	
	// HouseEvent(HouseText, HouseBG)



ShopItems:
SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4