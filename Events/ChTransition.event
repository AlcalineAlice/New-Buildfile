//  08035F34 F7FF FC66   BL 0x08035804   //ExecFortSelfHealMotion @ r0 as Unit ? 
// 8035E20 B510   PUSH {r4,lr}   //Procs TerrainHealLoop CallASM
// 089EE340	&EVENT	Any event function	Mystery	1	{U}
//Ram to save certain things in 

#define XCoordNewArea 			0x30017ac
#define YCoordNewArea 			0x30017ad
#define CurrentChapter 		0x30017ae
#define TeleportChapter 		0x30017af 
#define RetreatChapter 		0x30017b0
#define DigChapter 			0x30017b1 
#define GaryStarterClass 		0x30017b2 //we can set this at the beginning and then add 1 a couple times to evolve, maybe? 
#define Player1UnitID 			0x30017b3 
//#define DisableMenuOptionsRam 0x30017b4 // gaiden, capture, submenu, (guard & call use definitions)  
#define Player6UnitID 			0x30017b8 
#define BerryDurabilityToggleRam 			0x30017b9 

#define ReturnTMRam 			0x30017ba // Also used for enemy AI 
#define DRSingleRam 			0x30017bb
#define UnitPointerRam 0x30017BC // - BF
#define WepRamLocat 0x30017C0 
#define PostTrainerBattleRamLocat 0x30017C4 //- c7 
// past this is volatile? 

// ASMC 0x80160D1 // Return to map BGM 
// SCOORD rB [5, 6]

/*
08040dcc AiSetMovCostTableWithPassableWalls
08040e04 .thumb
08040e04 AiSetMovCostTableWithTerrainSetAsPassable
08040e68 .thumb
08040e68 InitAiMoveMapForUnit
08040f28 .thumb
08040f28 AiMapRangeFillMovementWithPassableWalls
08040f88 .thumb
08040f88 InitAiRangeMoveMapForUnitWithDoorsPassable
*/

/*
// 0803d450 AiTryDoOffensiveAction 
08039c20 AiSetDecision
08039c64 .thumb
08039c64 AiUpdateDecision
08039cac .thumb
// Lag testing - 
08039cac AiMasterDecisionMaker - break here first, then break on 08039c20 AiSetDecision
08039d10 .thumb
*/


//prep - make stuff unequipped 
//leave prep chapter - auto equip accessories 
//grey out unusable skill scrolls ? 

ReleasePokemonEvent:
EVBIT_MODIFY 4
CURSOR_FLASHING 0x7FFF // Shiny frame ? 
CHECK_COORDS 0x7FFF 
SADD rB rC r0 
SPAWN_NPC 0xFC [-1,-1] 
ASMC ModularSummon_CenterCameraASMC
//SHORT 0x2629 0x7FFE // Cam2 
//SVAL r1 0x30000 
//SADD rB rB r1 // 3 Y coord lower than active unit 
//SPAWN_NPC 0xFD [-1,-1] // Invisible unit for cam 

//DISA 0xFD 

STARTFADE 
FADECOLORS 0x1006 5 135 110 110 // non-sprites? 
CURE 
TutText_B(ReleasePokemonText)
SADD rA rC r0 

SVAL r7 1
BNE 0 rA r7 
// They said yes 
SVAL rC 0 
GetNthUnit(2) 
BEQ 10 rC r0
// And they have another unit deployed 
TutText_B(GoodbyeReleasePokemonText)

DISA 0x7FFF 

ReorderParty 
//ENDFADE 
SET_ACTIVE 0 
GOTO 0x63  

LABEL 10 
//ENDFADE 
TutText_B(CannotReleasePokemonText)
GOTO 0x63 

LABEL 0 

TutText_B(BetterKeepPokemonText)

LABEL 0x63 
EVBIT_MODIFY 0
CAM1 0xFC 
DISA 0xFC 
ENDFADE 
//CHECK_CHAPTER_NUMBER 
//SADD r1 rC r0 
//LOMA (-1) 
NoFade 
ENDA 


#define RamFlags 0x203F548 //0x448 after debuff table 

GenericEffect(0, TestCase) // This does work 
GenericEffect(1, VisitPokecenter) // 
GenericEffect(2, VisitPokecenter) // 
GenericEffect(3, TestCase) // 

GenericDisappearEffect(2, VisitPokecenter) //
//GenericEffect(1, VisitPokecenter) // 

TestCase:
GiveEXP(0x7FFF, 100)
//CALL VisitPokecenter
NoFade 
ENDA 

InitiateCutscene:
CHECK_EVENTID -1 // Flag in s2 
BNE 0x63 rC r0 // End if flag is on 
ENUT PlayableCutsceneFlag // Prevent "Call" 

SVAL rC 0 // True 
LABEL 0x63 
NoFade 
ENDA 



TeleportActiveUnitPrepEvent:
NoFade 
ENDA 

TeleportActiveUnitEvent:
NoFade 
ENDA 




GenericAutolevelEvent:
// Check difficulty 
CHECK_TUTORIAL
BEQ 0 rC r0 
AutoLevelUnits(0*TrainerDifficultyBonusDef, False, 0x90EF) // Not wilds given +1 invisible levels on easy 
GOTO 0x63 
LABEL 0 
CHECK_HARD 
BEQ 1 rC r0 
AutoLevelUnits(2*TrainerDifficultyBonusDef, False, 0x90EF) // Not wilds given +8 invisible levels on hard 
GOTO 0x63 
LABEL 1 
AutoLevelUnits(1*TrainerDifficultyBonusDef, False, 0x90EF) // Not wilds given +3 invisible levels on normal 
LABEL 0x63 
//ASMC RemoveFoughtTrainers
//SADD r2 rC r0 // Don't think this is necessary even though rC is pretty volatile 
NoFade 
ENDA 

ALIGN 4
SetBushHpEvent:
// Terminates when no unit is found 
SVAL r2 0xEF 
SVAL r6 1 
LABEL 0 // Loop Start 
// SVAL rC 0 
SADD r2 r2 r6 // current unit ID in r2 / counter 
CHECK_EXISTS 0x7FFD 
BEQ 0x63 rC r0 
SetUnitStatus(0x7FFD, AI2Counter, 5)
SetUnitStatus(0x7FFD, CurrentHP, 1)
GOTO 0 
LABEL 0x63 
NoFade 
ENDA 

// CALL ClosedArea
ALIGN 4 
ClosedArea:
TutText(ClosedAreaText)
NoFade 
ENDB 

ALIGN 4 
CannotEscapeTrainerBattleEvent:
Text(CannotEscapeTrainerBattleText)
NoFade 
ENDA 

ALIGN 4
CheckIfNoPlayerUnits:
// For some reason there's no game over when all units are dead/undeployed anymore 
// I don't know why. I tried searching in files for 0x18F and 0x190 where the routine seems 
// to be at 19240, but found nothing. See the feb patch if this behaviour is desired. 
// This just turns on the game over flag if there are no player units 
SVAL rC 0x0 

CHECK_CLASS 0x102 // Can still check dying unit, but since they're dying 
					// we check if there's 2 or more units in the party. 
					// If it's your only unit, game over. 
BNE 0 rC r0 
ENUT 0x65 
ASMC 0xD391 // Game over ASMC 
LABEL 0 
NoFade 
ENDA 


GlobalAfev:

//ReplenishDurability(0x7FFF)
//SVAL r2 0 // Player allegiance 
//CALL 0x89EE1B8 // When matching allegiance stops in range // This is dangerous, it seems. Doing it can lead into an infinite loop of cantoing by 1 tile. 
				// 		Eg. if not player, ENDB 
		//CALL RefreshActiveUnitEvent
NoFade
ENDA 

GlobalTalkEvent:
NoFade
ENDA 

CityBeginningScene:
SetMaxMove
//SetUnitStatusAll(Any, MovBonus, 10, AnyDeployed, PlayerArmy, AnyClass, AnyRange, AnyItem) 
#ifdef FREE_MOVEMENT_INSTALLED
EnableFreeMovement
#endif 
QuickSave
NoFade 
ENDA 

GlobalBeginningScene:
SetUnitStatusAll(Any, MovBonus, 0, AnyDeployed, PlayerArmy, AnyClass, AnyRange, AnyItem) 
#ifdef DEBUG_MODE 
SetMaxMove
#endif 
//#ifndef DEBUG_MODE 
QuickSave
//#endif 
NoFade 
ENDA 

GlobalTurnEvent:
CHECK_EVENTID QuicksaveToggleFlag
BNE 2 rC r0 
QuickSave
LABEL 2 
CHECK_EVENTID CallCountdownFlag_2 
BNE 0 rC r0 
ENUF 1 // Auto refresh if not in danger 
LABEL 0 
ENUF CallCountdownFlag_2 // 1 turn until auto refresh again 
#ifdef DRUnitBitMask
CHECK_EVENTID DangerRadiusToggleFlag
BNE 1 rC r0 
SetNearbyDangerRadius
LABEL 1 
#endif 
ENUF CallCountdownFlag // Can 'Call' again 
NoFade
ENDA 


GlobalNPCTurnEvent:
NoFade
ENDA 
GlobalEnemyTurnEvent:
NoFade
ENDA 


HealPartyWithSFXEvent:
_MUSICSOMETHING 0x7FFF 
SOUN 0x19 // Pokecenter chime 
CALL HealPartyEvent 
SET_ACTIVE 0
ASMC 0x80225F9 // End player phase 
NoFade 
ENDA 


HealPartyEvent:
GetUnitStatus(0x101, MaxHP)
SADD r5 rC r0 
SetUnitStatus(0x101, CurrentHP) 
GetUnitStatus(0x102, MaxHP)
SADD r5 rC r0 
SetUnitStatus(0x102, CurrentHP) 
GetUnitStatus(0x103, MaxHP)
SADD r5 rC r0 
SetUnitStatus(0x103, CurrentHP) 
GetUnitStatus(0x104, MaxHP)
SADD r5 rC r0 
SetUnitStatus(0x104, CurrentHP) 
GetUnitStatus(0x105, MaxHP)
SADD r5 rC r0 
SetUnitStatus(0x105, CurrentHP) 
GetUnitStatus(0x106, MaxHP)
SADD r5 rC r0 
SetUnitStatus(0x106, CurrentHP) 
NoFade 
ENDA 

TurnNPCsToEnemies:
CHECK_EVENTID PlayableCutsceneFlag
BEQ 0 rC r0 
CUSE 0xFA 
CUSE 0xFB 
CUSE 0xFC 
CUSE 0xFD 
LABEL 0 
NoFade 
ENDA 

TurnEnemiesToNPCs:
CHECK_EVENTID PlayableCutsceneFlag
BEQ 0 rC r0 
CUSN 0xFA 
CUSN 0xFB 
CUSN 0xFC 
CUSN 0xFD 
LABEL 0 
NoFade 
ENDA 

//#define Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns) "SVAL r5 UnitGroup|IsPointer; SVAL r6 GracePeriod+6; SVAL r7 FrequencyInTurns; SVAL r2 BushUnitID; SVAL r8 NumberOfEnemies; Call LoadReinforcements"


#define Reinforce2(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns) "SVAL r5 UnitGroup|IsPointer; SVAL r6 GracePeriod+6; SVAL r7 FrequencyInTurns; SVAL r2 BushUnitID; SVAL r8 NumberOfEnemies; Call LoadReinforcements2"


/*
"SVAL r5 UnitGroup; 
SVAL r6 GracePeriod    +5     ; 
SVAL r7 FrequencyInTurns; 
SVAL r2 BushUnitID; 
SVAL r8 NumberOfEnemies; "

When loaded, set their AI2 counter to 5 
Each turn, this increments by +1 

If AI2 counter is 1 less than TurnToOccur, display angry face at coords +10000 (1y below) 

If AI2 counter is equal or greater than TurnToOccur, load unit r8 times 
*/

SpawnUnitsEvent:
//ASMC Reinforce_ASMC
NoFade 
ENDA 


LoadReinforcements2:
CHECK_ALIVE 0x7FFD 
BEQ 0x63 rC r0 //If bush is dead, break 

CHECK_ENEMIES 
SVAL r1 30 
BGE 0x63 rC r1 // Don't load reinforcements if 30+ units on map - prev 50 If we've hit the enemy cap, don't load reinforcements  

// r5 is unit group pointer 
ASMC CountReinforcementUnits 
SVAL r1 15 
BGE 0x63 rC r1 // If 15 or more reinforcements, do not spawn any more 


GetUnitStatus(0x7FFD, AI2Counter)
SADD rA rC r0 
BLT 0x63 rA r6 //Do nothing during grace period 


SADD rB r5 r0 



SENQUEUE r7 
SENQUEUE r8 


/*
r6 GracePeriod    +5 
r7 FrequencyInTurns
rA AI2Counter 


If AI2Counter is less than the Graceperiod, do nothing 

Eg. 3 turn grace, then every 4 turns 




Get hp 

If Hp is max, set AI2Counter to r4+1 
If hp is dn bge max-X, set AI2Counter to r4 

Freq - 1 
Add MaxHP+(Freq-1) / (Freq) // For friendly rounding 
*/


CAM1 0x7FFD 


GetUnitStatus(0x7FFD, MaxHP) //s1, s3, s4 
SVAL r1 1 
SSUB r3 r7 r1 // Freq-1 
SADD r9 rC r3  //Add MaxHP+(Freq-1)

SDIV r9 r9 r7 // MaxHP / Freq (rounded up) 
GetUnitStatus(0x7FFD, CurrentHP) //s1, s3, s4 
SADD r5 rC r9 
//SADD r5 r5 r9 //for rounding  
GetUnitStatus(0x7FFD, MaxHP) //s1, s3, s4 
// MaxHP / Freq (rounded down) 
SDIV r3 rC r7 
SDIV r1 r5 r3 

SADD r3 r6 r0 //5 + grace period (eg. 6) 

SADD r5 r3 r1 // 6 + 3 = 9 

SetUnitStatus(0x7FFD, AI2Counter) // Set to ai2 
//Text(0x9d6)
// Plus grace period + 5 

SADD rA r5 r0 

SADD r9 r2 r0 
SVAL r1 1 
//r6 should be 
SADD r4 r6 r7 	// Graceperiod + Freq 

SSUB r4 r4 r1  //r4 is now TurnToOccur - 1 

SADD r5 rB r0 // Unit Group 

CHECK_COORDS 0x7FFD 
SADD rB rC r0 



BNE 0 r4 rA 
	//Display scary face at +1y coord below 

	CAM1 0x7FFD 
	//Text(0x9d5)
	STAL 20
	SVAL r1 0x10000 
	SADD rB rB r1 
	EmoticonSlotB(0x14)
	//EmoticonSlotB(MonsterFaceGraphic)
	STAL 77 
	SSUB rB rB r1 //

	GOTO 20 
Label 0 

SVAL r1 1
SADD r6 r4 r1
BLT 1 rA r6 

	SADD r7 r5 r0  // Unit group? 
GetUnitStatus(0x7FFD, CurrentHP) //s1, s3, s4 

SADD r5 rC r0
GetUnitStatus(0x7FFD, MaxHP) // Failsafe I guess, but this thing isn't quite perfectly functional anyway lol 
BLT 1 r5 rC  // If less than full hp, don't load units 


		//Load units

	COUNTER_SET 0 0 
	Label 2 // Loop 
	//Text(0x9d5)
	COUNTER_ADD 0 1 
	SADD r2 r7 r0 
	LOAD_S2 1 //Load unit group provided earlier without restriction 
	ENUN 
	
	SADD r6 rB r0 
	SVAL rB 0
	SetUnitStatus(0x7FFE, State, 0) // Remove "Drop last item" 
	SADD r2 r9 r0 
	SetUnitStatus(0x7FFD, State, 0xC) // Undeploy+Dead bush for MOVENEXTTO to work 
	
	// New unit was loaded at 0,0 so we move them to r8 coord of Bush 



	MOVEONTO (-1) 0x7FFE 0x7FFD
	ENUN 
	SADD rB r6 r0 
	EVBIT_T 9 //Follow moving units 
	
	// "SVAL 1 Levels; SVAL 3 IncreaseDisplayedLevelBoolean; SVAL 4 UnitIDRange; ASMC AutoLevelUnits" 
	// We should make these auto level some specific amount 
	// How about by the level of the bush? 
	GetUnitStatus(0x7FFD, Level) 
	SADD r1 rC r0 // Level to autolevel by 
	SVAL r3 True 
	SVAL r4 0x909F // Wild reinforcements 
	SADD r5 rB r0 // Bush/newly spawned unit coord 
	ASMC AutoLevelUnits // Also teaches them moves 
	
	// move coord unit beside the undeployed bush 
	// if you spawn_npc here instead, you'll need to undeploy it or something so that 0x7FFE ignores the placeholder 
	// npc while moving the newly spawned unit 
	MOVENEXTTO 0x2 0x7FFE 0x7FFD  
	ENUN 
	

	
	SetUnitStatus(0x7FFC, State, 0) // Redeploy Bush 

	EVBIT_F 9 //Unfollow moving units 
	
	COUNTER_CHECK 0
	BLT 2 rC r8 // Loop if supposed to deploy multiple units 
	SDEQUEUE r8
	SDEQUEUE r7 
	//GetUnitStatus(0x7FFD, AI2_Counter) 
	SSUB r5 rA r7 //sub by frequency 
	SetUnitStatus(0x7FFD, AI2Counter) //uses r5 as Value 
	SetUnitStatus(0x7FFD, CurrentHP, 1) //uses r5 as Value 



	
	GOTO 0x63  
Label 1 
	SDEQUEUE r8
	SDEQUEUE r7 
Label 20 



Label 0x63 
NoFade
ENDA 


LoadReinforcements:
CHECK_ALIVE 0x7FFD 
BEQ 0x63 rC r0 //If bush is dead, break 

CHECK_ENEMIES 
SVAL r1 30 
BGE 0x63 rC r1 // Don't load reinforcements if 30+ units on map - prev 50 If we've hit the enemy cap, don't load reinforcements  

// r5 is unit group pointer 
ASMC CountReinforcementUnits 
SVAL r1 15 
BGE 0x63 rC r1 // If 15 or more reinforcements, do not spawn any more 


GetUnitStatus(0x7FFD, AI2Counter)
SADD rA rC r0 
BLT 0x63 rA r6 //Do nothing during grace period 


SADD rB r5 r0 



SENQUEUE r7 
SENQUEUE r8 


/*
r6 GracePeriod    +5 
r7 FrequencyInTurns
rA AI2Counter 


If AI2Counter is less than the Graceperiod, do nothing 

Eg. 3 turn grace, then every 4 turns 




Get hp 

If Hp is max, set AI2Counter to r4+1 
If hp is dn bge max-X, set AI2Counter to r4 

Freq - 1 
Add MaxHP+(Freq-1) / (Freq) // For friendly rounding 
*/


CAM1 0x7FFD 


GetUnitStatus(0x7FFD, MaxHP) //s1, s3, s4 
SVAL r1 1 
SSUB r3 r7 r1 // Freq-1 
SADD r9 rC r3  //Add MaxHP+(Freq-1)

SDIV r9 r9 r7 // MaxHP / Freq (rounded up) 
GetUnitStatus(0x7FFD, CurrentHP) //s1, s3, s4 
SADD r5 rC r9 
SetUnitStatus(0x7FFD, CurrentHP) // Set to heal 
//SADD r5 r5 r9 //for rounding  
GetUnitStatus(0x7FFD, MaxHP) //s1, s3, s4 
// MaxHP / Freq (rounded down) 
SDIV r3 rC r7 
SDIV r1 r5 r3 

SADD r3 r6 r0 //5 + grace period (eg. 6) 

SADD r5 r3 r1 // 6 + 3 = 9 

SetUnitStatus(0x7FFD, AI2Counter) // Set to ai2 
//Text(0x9d6)
// Plus grace period + 5 

SADD rA r5 r0 

SADD r9 r2 r0 
SVAL r1 1 
//r6 should be 
SADD r4 r6 r7 	// Graceperiod + Freq 

SSUB r4 r4 r1  //r4 is now TurnToOccur - 1 

SADD r5 rB r0 // Unit Group 

CHECK_COORDS 0x7FFD 
SADD rB rC r0 



BNE 0 r4 rA 
	//Display scary face at +1y coord below 

	CAM1 0x7FFD 
	//Text(0x9d5)
	STAL 20
	SVAL r1 0x10000 
	SADD rB rB r1 
	EmoticonSlotB(0x14)
	//EmoticonSlotB(MonsterFaceGraphic)
	STAL 77 
	SSUB rB rB r1 //

	GOTO 20 
Label 0 

SVAL r1 1
SADD r6 r4 r1
BLT 1 rA r6 

	SADD r7 r5 r0  // Unit group? 
GetUnitStatus(0x7FFD, CurrentHP) //s1, s3, s4 

SADD r5 rC r0
GetUnitStatus(0x7FFD, MaxHP) // Failsafe I guess, but this thing isn't quite perfectly functional anyway lol 
BLT 1 r5 rC  // If less than full hp, don't load units 


		//Load units

	COUNTER_SET 0 0 
	Label 2 // Loop 
	//Text(0x9d5)
	COUNTER_ADD 0 1 
	SADD r2 r7 r0 
	LOAD_S2 1 //Load unit group provided earlier without restriction 
	ENUN 
	
	SADD r6 rB r0 
	SVAL rB 0
	SetUnitStatus(0x7FFE, State, 0) // Remove "Drop last item" 
	SADD r2 r9 r0 
	SetUnitStatus(0x7FFD, State, 0xC) // Undeploy+Dead bush for MOVENEXTTO to work 
	
	// New unit was loaded at 0,0 so we move them to r8 coord of Bush 



	MOVEONTO (-1) 0x7FFE 0x7FFD
	ENUN 
	SADD rB r6 r0 
	EVBIT_T 9 //Follow moving units 
	
	// "SVAL 1 Levels; SVAL 3 IncreaseDisplayedLevelBoolean; SVAL 4 UnitIDRange; ASMC AutoLevelUnits" 
	// We should make these auto level some specific amount 
	// How about by the level of the bush? 
	GetUnitStatus(0x7FFD, Level) 
	SADD r1 rC r0 // Level to autolevel by 
	SVAL r3 True 
	SVAL r4 0x909F // Wild reinforcements 
	SADD r5 rB r0 // Bush/newly spawned unit coord 
	ASMC AutoLevelUnits // Also teaches them moves 
	
	// move coord unit beside the undeployed bush 
	// if you spawn_npc here instead, you'll need to undeploy it or something so that 0x7FFE ignores the placeholder 
	// npc while moving the newly spawned unit 
	MOVENEXTTO 0x2 0x7FFE 0x7FFD  
	ENUN 
	

	
	SetUnitStatus(0x7FFC, State, 0) // Redeploy Bush 

	EVBIT_F 9 //Unfollow moving units 
	
	COUNTER_CHECK 0
	BLT 2 rC r8 // Loop if supposed to deploy multiple units 
	SDEQUEUE r8
	SDEQUEUE r7 
	//GetUnitStatus(0x7FFD, AI2_Counter) 
	SSUB r5 rA r7 //sub by frequency 
	SetUnitStatus(0x7FFD, AI2Counter) //uses r5 as Value 
	SetUnitStatus(0x7FFD, CurrentHP, 1) //uses r5 as Value 



	
	GOTO 0x63  
Label 1 
	SDEQUEUE r8
	SDEQUEUE r7 
Label 20 



Label 0x63 
NoFade
ENDA 


CityAfev:
//ASMC CallCommandEffect
//UNCM(0x7FFF, 0x0D) // Undeploy active 
NoFade 
ENDA 


VisitPokecenter:

CHECK_COORDS 0x7FFF
SADD rB rC r0 
CALL ConvertFromMemSlotBCoord
CHECK_CHAPTER_NUMBER
SADD r2 rC r0 
Write_Byte(CurrentChapter)

MNC2 PokecenterCh 
NoFade 
ENDA 

ALIGN 4
AttackedThisTurnFlagLink:
BYTE AttackedThisTurnFlag 

ALIGN 4
TrainerBattleActiveFlagLink:
BYTE TrainerBattleActiveFlag


ALIGN 4 
RefreshIfNotInDanger:
// for some reason if you walk your max range it doesn't auto select your active unit 
// but it does if you walk less than that ??????? 
NoFade 
ENDA 


UnusedEvent:
CHECK_EVENTID TrainerBattleActiveFlag 
BNE 62 rC r0 // if flag is ON,  skip everything 

CHECK_EVENTID AttackedThisTurnFlag 
BNE 63 rC r0 // if flag is ON,  skip everything 
CHECK_ENEMIES 
BEQ 10 rC r0 // No Enemies, so refresh 

GOTO 63 

CHECK_COORDS 0x7FFF
SADD rB rC r0 
ASMC CheckUnitIsInDanger
BEQ 10 rC r0 
GOTO 62 
Label 10 
UNCR(0x7FFF, 0x42)
GOTO 63
LABEL 62 
ENUT 1 
ENUT 9
LABEL 63 

//#ifdef DRUnitBitMask
//CHECK_EVENTID 1 // Auto refresh if not in danger 
//BNE 0 rC r0 
//SetNearbyDangerRadius
//SetNearbyDangerRadius
//ASMC InitializeDR|1 
//LABEL 0
//#endif 



NoFade
ENDA 

ConvertToMemSlotBCoord: //unused 
SVAL rB 0x10000 
Read_Byte(YCoordNewArea)
SMUL rB rC rB 
Read_Byte(XCoordNewArea)
SADD rB rC rB 
NoFade
ENDA 

ConvertFromMemSlotBCoord:
SVAL rC 0x10000 
SMOD r2 rB rC  
Write_Byte(XCoordNewArea)
SVAL rC 0x10000
SDIV r2 rB rC 
Write_Byte(YCoordNewArea) 
NoFade
ENDA 


#define ChapterTransition(DestChapter, DestX, DestY) "Write_Byte(DestX, XCoordNewArea); Write_Byte(DestY, YCoordNewArea); SVAL r9 DestChapter; CALL ChTransition; NoFade; ENDA" 
#define ForcedChapterTransition(DestChapter, DestX, DestY) "Write_Byte(DestX, XCoordNewArea); Write_Byte(DestY, YCoordNewArea); SVAL r9 DestChapter; CALL ForceChTransition; NoFade; ENDA" 

ForceChTransition:
ENUF TrainerBattleActiveFlag
#ifdef FREE_MOVEMENT_INSTALLED
DisableFreeMovement
#endif 
SADD 2 9 0 
MNC2 (-1) 
ENUF PlayableCutsceneFlag 
LABEL 0x63 
EVBIT_MODIFY 0
NoFade
ENDA 


ChTransition: 

#ifdef FREE_MOVEMENT_INSTALLED
DisableFreeMovement
#endif 
SVAL r2 0 // Player allegiance 
CALL 0x89EE1B8 // When matching allegiance stops in range 


EVBIT_MODIFY 4
SVAL r7 1 
EVBIT_F 2 

TutText(ProceedAreaText) 
BNE 0x63 rC r7
ENUF TrainerBattleActiveFlag
SADD 2 9 0 

MNC2 (-1) 
ENUF PlayableCutsceneFlag 
GOTO 0x63 



LABEL 0x63 
EVBIT_MODIFY 0
NoFade
ENDA 

LoadMainUnit:
LOAD3 0x0 First1Player //always should have one player, at least 
SVAL r4 1
OnAllUnitState(0x01FF, Undeployed, Escaped|Undeployed|Hide, AnyArmy, AnyClass, AnyRange, AnyItem) 
ENUN 
CALL PlacePlayers
NoFade 
ENDA 


LoadAndPlacePlayers:
//EVBIT_T 0x2 //Scene skipping 
//FADU -1 
//FADI -1 

CALL CheckDeployed 

CALL PlacePlayers 

NoFade
ENDA

CamSlotB:
SPAWN_NPC 0xFD [-1, -1] 
CAM1 0x7FFE 
DISA 0xFD 
NoFade 
ENDA 

SendOutPkmnSlotB:
EmoticonSlotB(PokeballGraphic)
STAL 14 
EmoticonSlotB(OpenPokeballGraphic)
STAL 18
LOAD_S2 1 // No restriction: always load 
ENUN 
SPAWN_NPC 0xFC [-1,-1] 
AddAnimTrap(LightRuneTrapID)
STAL 22 
RemoveTrap 

DISA 0xFC 
STAL 10
NoFade 
ENDA 

SomeSignsAllowFastTravelEvent:
TutText(SignsFastTravel)
NoFade 
ENDA 


FastTravelEvent:
TutText(KnowledgeArea)
CHECK_ACTIVE 
SADD r2 rC r0 
SET_ACTIVE 0

SADD rB r3 r0 
SPAWN_NPC 0xFD [-1,-1] 

EVBIT_T 2 // Scene skipping 
MOVENEXTTO (-1) 0x7FFD 0x7FFE // speed, unit unit 
ENUN 

CAM1 0xFD 
DISA 0xFD 
UNCR(0x7FFD, 0x42) 
CHECK_COORDS 0x7FFD 
SADD rB rC r0 
SET_CURSOR_SB

EVBIT_F 2
NoFade 
ENDA 

// Unused now..? 
CallCommandEvent:
ENUT 1 // Battle flag / Used 'Call' this turn 
CHECK_COORDS 0x7FFF 
SADD rB rC r0 
SPAWN_NPC 0xFD [-1,-1]
MOVENEXTTO 	(-1) 0x301 0xFD
MOVENEXTTO 	(-1) 0x302 0xFD
MOVENEXTTO	(-1) 0x0303 0xFD
ENUN 
MOVENEXTTO (-1) 0x0304 0xFD
MOVENEXTTO (-1) 0x0305 0xFD
ENUN 
DISA 0xFD 
NoFade
ENDA 

PlacePlayers:
SET_ACTIVE 0
SPAWN_NPC 0xFD [0,0]
Read_Byte(XCoordNewArea)
SADD r5 rC r0 
SVAL r1 0xFD //1st player unit 
SVAL r3 0x10  	// X coord 
SVAL r4 0x03 	// Byte 
ASMC SetUnitStatus 

Read_Byte(YCoordNewArea)
SADD r5 rC r0 
SVAL r1 0xFD //1st player unit 
SVAL r3 0x11 	// Y coord 
SVAL r4 0x03 	// Byte
ASMC SetUnitStatus
ENUN 			// move 1st unit instantly to value in CoordsNewArea 

// speed, unit, destination unit 
MOVEONTO 	(-1) 0x101 0xFD //hold this coordinate for now because MoveNextTo is stupid 
MOVENEXTTO 	(-1) 0x102 0xFD 

MOVENEXTTO (-1) 0x0103 0xFD
MOVENEXTTO (-1) 0x0104 0xFD
ENUN 

MOVENEXTTO (-1) 0x0105 0xFD
MOVENEXTTO (-1) 0x0106 0xFD
//MOVENEXTTO (-1) 0x0102 0x0102 //free up P1's coord  

ENUN 
CAM1 0xFD 
DISA 0xFD 
UNCR(0x0101, 0x0D)
//Text(0x9DD)

//MOVE 
NoFade
ENDA

#define Try5Label 0 
#define Try4Label 1 
#define Try3Label 2 
#define Try2Label 3 
#define Try1Label 4 


#define EndLabel 63 

CheckDeployed:
GetNthUnit(6)
BEQ Try5Label rC r0 
LOAD3 0x0 First6Players 
SVAL r4 6
GOTO EndLabel

Label Try5Label
GetNthUnit(5)
BEQ Try4Label rC r0 
LOAD3 0x0 First5Players 
SVAL r4 5
GOTO EndLabel 

Label Try4Label
GetNthUnit(4)
BEQ Try3Label rC r0 
LOAD3 0x0 First4Players 
SVAL r4 4
GOTO EndLabel 

Label Try3Label
GetNthUnit(3)
BEQ Try2Label rC r0 
LOAD3 0x0 First3Players 
SVAL r4 3
GOTO EndLabel 

Label Try2Label
GetNthUnit(2)
BEQ Try1Label rC r0 
LOAD3 0x0 First2Players 
SVAL r4 2
GOTO EndLabel 

Label Try1Label

LOAD3 0x0 First1Player //always should have one player, at least 
SVAL r4 1

Label EndLabel 
OnAllUnitState(0x01FF, Escaped|Undeployed|Hide, Undeployed, AnyArmy, AnyClass, AnyRange, AnyItem) 
ENUN 
NoFade 
ENDA 



First6Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First5Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First4Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First3Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First2Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First1Player:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT


