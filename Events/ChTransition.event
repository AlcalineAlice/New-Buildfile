//Ram to save certain things in 

#define XCoordNewArea 			0x30017ac
#define YCoordNewArea 			0x30017ad
#define CurrentChapter 		0x30017ae
#define TeleportChapter 		0x30017af 
#define RetreatChapter 		0x30017b0
#define DigChapter 			0x30017b1 
#define GaryStarterClass 		0x30017b2 //we can set this at the beginning and then add 1 a couple times to evolve, maybe? 
#define Player1UnitID 			0x30017b3 
#define Player2UnitID 			0x30017b4 
#define Player3UnitID 			0x30017b5 
#define Player4UnitID 			0x30017b6 
#define Player5UnitID 			0x30017b7 
#define Player6UnitID 			0x30017b8 
#define BerryDurabilityToggleRam 			0x30017b9 
#define ReturnTMRam 			0x30017ba
#define UnitPointerRam 0x30017BC // - BF
#define NextFree 0x30017C0 

#define RamFlags 0x203F548 //0x448 after debuff table 

GenericEffect(0, TestCase) // This doesn't work so whatever 
GenericEffect(1, TestCase) // This doesn't work so whatever 
GenericEffect(2, TestCase) // This doesn't work so whatever 
GenericEffect(3, TestCase) // This doesn't work so whatever 

GenericDisappearEffect(2, VisitPokecenter) // This doesn't work so whatever 
//GenericEffect(1, VisitPokecenter) // This doesn't work so whatever 

TestCase:


//GiveEXP(0x7FFF, 90)
CALL VisitPokecenter
NoFade 
ENDA 

GenericAutolevelEvent:
// Check difficulty 
AutoLevelUnits(1, False, 0x90EF) // Not wilds given +1 invisible levels 
AutoLevelUnits(6, False, 0x90EF) // Not wilds given +6 invisible levels 
AutoLevelUnits(11, False, 0x90EF) // Not wilds given +11 invisible levels 

NoFade 
ENDA 

ALIGN 4
CheckIfNoPlayerUnits:
// For some reason there's no game over when all units are dead/undeployed anymore 
// I don't know why. I tried searching in files for 0x18F and 0x190 where the routine seems 
// to be at 19240, but found nothing. See the feb patch if this behaviour is desired. 
// This just turns on the game over flag if there are no player units 
SVAL rC 0x0 

CHECK_CLASS 0x102 // Can still check dying unit, but since they're dying 
					// we check if there's 2 or more units in the party. 
					// If it's your only unit, game over. 
BNE 0 rC r0 
ENUT 0x65 
LABEL 0 
NoFade 
ENDA 


GlobalAfev:
SVAL r2 0 // Player allegiance 
CALL 0x89EE1B8 // When matching allegiance stops in range 
				// 		Eg. if not player, ENDB 
NoFade
ENDA 

GlobalTalkEvent:
NoFade
ENDA 

CityBeginningScene:
SetUnitStatusAll(Any, MovBonus, 10, AnyDeployed, PlayerArmy, AnyClass, AnyRange, AnyItem) 
NoFade 
ENDA 

GlobalBeginningScene:
SetUnitStatusAll(Any, MovBonus, 0, AnyDeployed, PlayerArmy, AnyClass, AnyRange, AnyItem) 
NoFade 
ENDA 

GlobalTurnEvent:
ENUF 1 // Can 'Call' again 
#ifdef DRUnitBitMask
SetNearbyDangerRadius
#endif 
NoFade
ENDA 


#define Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns) "SVAL r5 UnitGroup|IsPointer; SVAL r6 GracePeriod+6; SVAL r7 FrequencyInTurns; SVAL r2 BushUnitID; SVAL r8 NumberOfEnemies; Call LoadReinforcements"


/*
"SVAL r5 UnitGroup; 
SVAL r6 GracePeriod    +5     ; 
SVAL r7 FrequencyInTurns; 
SVAL r2 BushUnitID; 
SVAL r8 NumberOfEnemies; "

When loaded, set their AI2 counter to 5 
Each turn, this increments by +1 


If AI2 counter is 1 less than TurnToOccur, display angry face at coords +10000 (1y below) 

If AI2 counter is equal or greater than TurnToOccur, load unit r8 times 



*/



LoadReinforcements:
CHECK_ALIVE 0x7FFD 
BEQ 0x63 rC r0 //If bush is dead, break 
GetUnitStatus(0x7FFD, AI2Counter)
SADD rA rC r0 
BLT 0x63 rA r6 //Do nothing during grace period 


SADD rB r5 r0 



SENQUEUE r7 
SENQUEUE r8 


/*
r6 GracePeriod    +5 
r7 FrequencyInTurns
rA AI2Counter 


If AI2Counter is less than the Graceperiod, do nothing 

Eg. 3 turn grace, then every 4 turns 




Get hp 

If Hp is max, set AI2Counter to r4+1 
If hp is dn bge max-X, set AI2Counter to r4 

Freq - 1 
Add MaxHP+(Freq-1) / (Freq) // For friendly rounding 
*/


CAM1 0x7FFD 


GetUnitStatus(0x7FFD, MaxHP) //s1, s3, s4 
SVAL r1 1 
SSUB r3 r7 r1 // Freq-1 
SADD r9 rC r3  //Add MaxHP+(Freq-1)

SDIV r9 r9 r7 // MaxHP / Freq (rounded up) 
GetUnitStatus(0x7FFD, CurrentHP) //s1, s3, s4 
SADD r5 rC r9 



SetUnitStatus(0x7FFD, CurrentHP) // Set to heal 




//SADD r5 r5 r9 //for rounding  
GetUnitStatus(0x7FFD, MaxHP) //s1, s3, s4 
// MaxHP / Freq (rounded down) 
SDIV r3 rC r7 
SDIV r1 r5 r3 

SADD r3 r6 r0 //5 + grace period (eg. 6) 

SADD r5 r3 r1 // 6 + 3 = 9 

SetUnitStatus(0x7FFD, AI2Counter) // Set to ai2 
//Text(0x9d6)
// Plus grace period + 5 

SADD rA r5 r0 

SADD r9 r2 r0 
SVAL r1 1 
//r6 should be 
SADD r4 r6 r7 	// Graceperiod + Freq 

SSUB r4 r4 r1  //r4 is now TurnToOccur - 1 

SADD r5 rB r0 // Unit Group 

CHECK_COORDS 0x7FFD 
SADD rB rC r0 



BNE 0 r4 rA 
	//Display scary face at +1y coord below 

	CAM1 0x7FFD 
	//Text(0x9d5)
	STAL 20
	SVAL r1 0x10000 
	SADD rB rB r1 
	EmoticonSlotB(0x14)
	//EmoticonSlotB(MonsterFaceGraphic)
	STAL 77 
	SSUB rB rB r1 //

	GOTO 20 
Label 0 

SVAL r1 1
SADD r6 r4 r1
BLT 1 rA r6 
		//Load units
	SADD r7 r5 r0 
	COUNTER_SET 0 0 
	Label 2 // Loop 
	//Text(0x9d5)
	COUNTER_ADD 0 1 
	SADD r2 r7 r0 
	LOAD_S2 1 //Load unit group provided earlier without restriction 
	ENUN 
	
	SADD r6 rB r0 
	SVAL rB 0
	SetUnitStatus(0x7FFE, State, 0) // Remove "Drop last item" 
	SADD r2 r9 r0 
	SetUnitStatus(0x7FFD, State, 0xC) // Undeploy+Dead bush for MOVENEXTTO to work 
	
	// New unit was loaded at 0,0 so we move them to r8 coord of Bush 
	MOVEONTO 0xFFFF 0x7FFE 0x7FFD
	ENUN 
	SADD rB r6 r0 
	EVBIT_T 9 //Follow moving units 
	MOVENEXTTO 0x2 0xFFFE 0x7FFD //vanilla ignores dead/undeployed units 
	ENUN 
	SetUnitStatus(0x7FFC, State, 0) // Redeploy Bush 

	EVBIT_F 9 //Unfollow moving units 
	
	COUNTER_CHECK 0
	BLT 2 rC r8 // Loop if supposed to deploy multiple units 
	SDEQUEUE r8
	SDEQUEUE r7 
	//GetUnitStatus(0x7FFD, AI2_Counter) 
	SSUB r5 rA r7 //sub by frequency 
	SetUnitStatus(0x7FFD, AI2Counter) //uses r5 as Value 
	SetUnitStatus(0x7FFD, CurrentHP, 1) //uses r5 as Value 

	GOTO 0x63  
Label 1 
	SDEQUEUE r8
	SDEQUEUE r7 
Label 20 



Label 0x63 
NoFade
ENDA 



VisitPokecenter:

CHECK_COORDS 0x7FFF
SADD rB rC r0 
CALL ConvertFromMemSlotBCoord
CHECK_CHAPTER_NUMBER
SADD r2 rC r0 
Write_Byte(CurrentChapter)

MNC2 PokecenterCh 
NoFade 
ENDA 

RefreshIfNotInDanger:
SVAL r2 0 // Player allegiance 
CALL 0x89EE1B8 // When matching allegiance stops in range 

CHECK_EVENTID 1 
BNE 63 rC r0 // if flag is ON,  skip everything 
CHECK_COORDS 0x7FFF
SADD rB rC r0 
ASMC CheckUnitIsInDanger
BEQ 10 rC r0 
GOTO 62 
Label 10 
UNCR(0x7FFF, 0x42)
GOTO 63
LABEL 62 
ENUT 1 
LABEL 63 
NoFade
ENDA 

ConvertToMemSlotBCoord: //unused 
SVAL rB 0x10000 
Read_Byte(YCoordNewArea)
SMUL rB rC rB 
Read_Byte(XCoordNewArea)
SADD rB rC rB 
NoFade
ENDA 

ConvertFromMemSlotBCoord:
SVAL rC 0x10000 
SMOD r2 rB rC  
Write_Byte(XCoordNewArea)
SVAL rC 0x10000
SDIV r2 rB rC 
Write_Byte(YCoordNewArea) 
NoFade
ENDA 


#define ChapterTransition(DestChapter, DestX, DestY) "Write_Byte(DestX, XCoordNewArea); Write_Byte(DestY, YCoordNewArea); SVAL r9 DestChapter; CALL ChTransition; NoFade; ENDA" 



ChTransition: 
SVAL r2 0 // Player allegiance 
CALL 0x89EE1B8 // When matching allegiance stops in range 

EVBIT_MODIFY 4
SVAL r7 1 
EVBIT_F 2 
TutText(ProceedAreaText) 
BNE 0x63 rC r7
SADD 2 9 0 
MNC2 0xFFFF 
LABEL 0x63 
EVBIT_MODIFY 0
NoFade
ENDA 

LoadAndPlacePlayers:
//EVBIT_T 0x2 //Scene skipping 
//FADU -1 
//FADI -1 

CALL CheckDeployed 

CALL PlacePlayers 

NoFade
ENDA

CamSlotB:
SPAWN_NPC 0xFD [-1, -1] 
CAM1 0x7FFE 
DISA 0xFD 
NoFade 
ENDA 

SendOutPkmnSlotB:
EmoticonSlotB(PokeballGraphic)
STAL 14 
EmoticonSlotB(OpenPokeballGraphic)
STAL 18
LOAD_S2 1 // No restriction: always load 
ENUN 
SPAWN_NPC 0xFC [-1,-1] 
AddAnimTrap(LightRuneTrapID)
STAL 22 
RemoveTrap 

DISA 0xFC 
NoFade 
ENDA 



FastTravelEvent:
TutText(KnowledgeArea)
CHECK_ACTIVE 
SADD r2 rC r0 
SET_ACTIVE 0

SADD rB r3 r0 
SPAWN_NPC 0xFD [-1,-1] 

EVBIT_T 2 // Scene skipping 
MOVENEXTTO 0xFFFF 0x7FFD 0x7FFE 
ENUN 

CAM1 0xFD 
DISA 0xFD 
UNCR(0x7FFD, 0x42) 
CHECK_COORDS 0x7FFD 
SADD rB rC r0 
SET_CURSOR_SB

EVBIT_F 2
NoFade 
ENDA 

CallCommandEvent:
ENUT 1 // Battle flag / Used 'Call' this turn 
CHECK_COORDS 0x7FFF 
SADD rB rC r0 
SPAWN_NPC 0xFD [-1,-1]
MOVENEXTTO 	0xFFFF 0x301 0xFD
MOVENEXTTO 	0xFFFF 0x302 0xFD
MOVENEXTTO		0xFFFF 0x0303 0xFD
ENUN 
MOVENEXTTO 0xFFFF 0x0304 0xFD
MOVENEXTTO 0xFFFF 0x0305 0xFD
ENUN 
DISA 0xFD 
NoFade
ENDA 

PlacePlayers:
SET_ACTIVE 0
SPAWN_NPC 0xFD [0,0]
Read_Byte(XCoordNewArea)
SADD r5 rC r0 
SVAL r1 0xFD //1st player unit 
SVAL r3 0x10  	// X coord 
SVAL r4 0x03 	// Byte 
ASMC SetUnitStatus 

Read_Byte(YCoordNewArea)
SADD r5 rC r0 
SVAL r1 0xFD //1st player unit 
SVAL r3 0x11 	// Y coord 
SVAL r4 0x03 	// Byte
ASMC SetUnitStatus
ENUN 			// move 1st unit instantly to value in CoordsNewArea 

// speed, unit, destination unit 
MOVEONTO 	0xFFFF 0x101 0xFD //hold this coordinate for now because MoveNextTo is stupid 
MOVENEXTTO 	0xFFFF 0x102 0xFD 

MOVENEXTTO 0xFFFF 0x0103 0xFD
MOVENEXTTO 0xFFFF 0x0104 0xFD
ENUN 

MOVENEXTTO 0xFFFF 0x0105 0xFD
MOVENEXTTO 0xFFFF 0x0106 0xFD
//MOVENEXTTO 0xFFFF 0x0102 0x0102 //free up P1's coord  

ENUN 
CAM1 0xFD 
DISA 0xFD 
UNCR(0x0101, 0x0D)
//Text(0x9DD)

//MOVE 
NoFade
ENDA

#define Try5Label 0 
#define Try4Label 1 
#define Try3Label 2 
#define Try2Label 3 
#define Try1Label 4 


#define EndLabel 63 

CheckDeployed:
SVAL rC 9
GetNthUnit(6)
BEQ Try5Label rC r0 
LOAD3 0x0 First6Players 
SVAL r4 6
GOTO EndLabel

Label Try5Label
SVAL rC 9
GetNthUnit(5)
BEQ Try4Label rC r0 
LOAD3 0x0 First5Players 
SVAL r4 5
GOTO EndLabel 

Label Try4Label
SVAL rC 9
GetNthUnit(4)
BEQ Try3Label rC r0 
LOAD3 0x0 First4Players 
SVAL r4 4
GOTO EndLabel 

Label Try3Label
SVAL rC 9
GetNthUnit(3)
BEQ Try2Label rC r0 
LOAD3 0x0 First3Players 
SVAL r4 3
GOTO EndLabel 

Label Try2Label
SVAL rC 9
GetNthUnit(2)
BEQ Try1Label rC r0 
LOAD3 0x0 First2Players 
SVAL r4 2
GOTO EndLabel 

Label Try1Label

LOAD3 0x0 First1Player //always should have one player, at least 
SVAL r4 1

Label EndLabel 
OnAllUnitState(0x01FF, Escaped|Undeployed|Hide, Undeployed, AnyArmy, AnyClass, AnyRange, AnyItem) 
ENUN 
NoFade 
ENDA 



First6Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First5Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First4Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [3,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First3Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,4] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First2Players:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT Seth  0x7 0x1 0xA1     [2,3] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT

First1Player:
UNIT Seth  0x7 0x1 0xA1     [2,2] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT


