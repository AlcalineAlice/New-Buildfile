#define ChapterID Route2SCh
#define GenericA UnitViridianForestSWild
#define GenericB UnitViridianForestSTrainer
#define ClassA ClassRoute1WildA
#define ClassB ClassRoute1WildB
#define WildLvl 2 
#define TrainerL 6 

EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventNPC(0,GlobalNPCTurnEvent,0,255) // placeholder
TurnEventEnemy(0,GlobalEnemyTurnEvent,0,255)// placeholder
TurnEventPlayer(0,ReinforcementEvent,0,255)
TurnEventEnemy(0,StartRivalBattleCutscene,1,1)
//TurnEventNPC(0,TurnNPCsToEnemies,0,255) // Instead made it so Gary / unit id 0xFA cannot be targeted despite being an enemy 
//TurnEventEnemy(0,TurnEnemiesToNPCs,0,255) // See "ForEachUnitInRangeHack.asm" 
END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
ReinforcementEvent:
Reinforce(0xF0, 1, ReinforcementUnits, 4, 4) // Top 
NoFade 
ENDA 


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
END_MAIN



LocationBasedEvents:
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
AREA 0 ToViridianForestS [5,10] [6,10] 
AREA 0 ToViridian [7,36] [11,36] 
AREA 0 ToRoute2N [18,5] [19,5] 
//AREA 0 StartRivalBattleCutscene [2,15] [16,35] // Turn event instead 
//AREA 0xA RivalEncounter [2,22] [13,35] 
//AFEV 0 RivalBattleEnd 0

END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(5,10) 
EscapeTileEntry(6,10) 
EscapeTileEntry(8,36) 
EscapeTileEntry(10,36) 
EscapeTileEntry(18,5) 
EscapeTileEntry(19,5) 
EscapeTileTerminator ; } 
#endif 

ToRoute2N:
ChapterTransition(ViridianForestSCh, 19, 41)

ToViridianForestS:
ChapterTransition(ViridianForestSCh, 28, 28)

ToViridian:
ChapterTransition(ViridianCh, 17, 0)


// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(8,19,ChapterID*2,250)
//CoinsTrap(20,35,(ChapterID*2)+1,250)

CutBush(15,26)
CutBush(16,21)
CutBush(15,27)


//RockSmash(3,2)
//StrengthBoulder(4,3)

RedPokeballTrap(21,31, ChapterID*2, Vulnerary)
//GoldPokeballTrap(17,20, (ChapterID*2)+1, Gust) 

SignBTrap(8,11, ChapterID, 0x0) //no extra text 
SignATrap(10,31, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(15,21, ChapterID*2, 0xB7)
SpellScrollTrap(17,20, (ChapterID*2)+1, 0xB7)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(12,17) 


BerryTree(2,22,5)



Flower(3,12)
Flower(2,13)
Flower(2,16)
Flower(2,18)
Flower(2,20)
Flower(16,22)
Flower(16,24)
Flower(17,23)
Flower(21,23)
Flower(20,24)
Flower(21,25)
ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 
 
LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeCoords(Grass, Range(0,0,5,5), Range(6,15,12,19)) //top patch 

AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  



CALL GenericAutolevelEvent // Trainers given invisible levels based on difficulty 

CALL SetBushHpEvent
LOAD1 0x1 HumanTrainers 
ENUN 


//CALL InitiateCutscene
//BNE 10 rC r0 

CheckTrainerFlag(0xE0) // based on unit IDs 0xE0-0xEF per chapter 
BNE 10 rC r0 

//ENUT PlayableCutsceneFlag 
LOAD1 0x1 GaryBattleUnitGroup 
ENUN 

AutoLevelUnits(TrainerL, True, 0xA0AF) 
// Cutscene is true 
//SetUnitStatus(0x01, CurrentHP, 5)
//SetUnitStatus(0x02, CurrentHP, 5)
//SetUnitStatus(0x0F, CurrentHP, 5)
//SilentGiveItem(0x12, LowKick)
//ASMC 0x80225F9 // End player phase 

//ASMC 0x080956d9 // Reorder player units 
LABEL 10 

AutoLevelUnits(TrainerL, True, 0xE0EF) // Trainers given +5 visible levels 


LABEL 0x63
NoFade
ENDA

StartRivalBattleCutscene: // So that players can flee if they never walk near the rival 
CheckTrainerFlag(0xE0) // based on unit IDs 0xE0-0xEF per chapter 
BNE 10 rC r0 
ENUT PlayableCutsceneFlag 
LABEL 10 
NoFade 
ENDA 

/*
RivalEncounter: 
CHECK_EVENTID PlayableCutsceneFlag
BEQ 0x63 rC r0 
CHECK_EVENTID GaryRoute2SDefeatedFlag
BNE 0x63 rC r0 
//ENUT 0xA 

CAM1 [8,27]

//UNCR(0x7FFF, 0x42) // Refresh active 
//SET_ACTIVE 0

UNCR(0x7FFF, 0x43) // Show SMS & Refresh 
ASMC 0x80790a5 //MU_EndAll //deselect unit

Write_Byte(BulbasaurID, GaryStarterClass)

SCOORD rB [9,27]
CALL CamSlotB
SCOORD rB [9,27]

Read_Byte(GaryStarterClass)
SADD r2 rC r0 
EVBIT_MODIFY 4
Text(GaryRoute2SChallengeText)
SVAL r1 BulbasaurID // Bulbasaur 
BNE BulbasaurID r2 r1 
// TRUE 

SVAL r2 GaryBulbasaurUnit|IsPointer
CALL SendOutPkmnSlotB

GOTO 10
LABEL BulbasaurID 

SVAL r1 SquirtleID // Bulbasaur 
BNE SquirtleID r2 r1 

SVAL r2 GarySquirtleUnit|IsPointer
CALL SendOutPkmnSlotB

GOTO 10
LABEL SquirtleID 

SVAL r1 CharmanderID // Bulbasaur 
BNE CharmanderID r2 r1 

SVAL r2 GaryCharmanderUnit|IsPointer
CALL SendOutPkmnSlotB


GOTO 10
LABEL CharmanderID 

LABEL 10 

SCOORD rB [10,28]
SVAL r2 GaryPidgeyUnit|IsPointer
CALL SendOutPkmnSlotB
SCOORD rB [8,28]
SVAL r2 GaryWeedleUnit|IsPointer
CALL SendOutPkmnSlotB
SCOORD rB [9,29]
SVAL r2 GaryRattataUnit|IsPointer
CALL SendOutPkmnSlotB

AutoLevelUnits(TrainerL, True, 0x90EF) 
EVBIT_MODIFY 0
LABEL 0x63 
NoFade 
ENDA 

*/





/*
RivalBattleEnd:
CHECK_EVENTID PlayableCutsceneFlag // Are we battling? 
BEQ 0x63 rC r0 
CHECK_ALIVE 0xA0 //0xD0 A1 a2 
BNE 0x63 rC r0 // if they are alive, jump to label 0x63 
CHECK_ALIVE 0xA1  
BNE 0x63 rC r0 
CHECK_ALIVE 0xA2  
BNE 0x63 rC r0 
CHECK_ALIVE 0xD0  
BNE 0x63 rC r0 
// All 4 of his pokemon are fainted 

UNCR(0x7FFF, 0x43) // Show SMS & Refresh 
ASMC 0x80790a5 //MU_EndAll //deselect unit

Text(GaryRoute2SDefeatText)
SVAL r3 1250 
GIVETOMAIN 0 
DISA 0xFA // Gary unit 
ENUF PlayableCutsceneFlag
ENUT GaryRoute2SDefeatedFlag

LABEL 10 
CALL HealPartyWithSFXEvent



LABEL 0x63 
NoFade 
ENDA 
*/




ShopItems:
SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(1, Enemy, 1)   [0,0] 001b 0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(1, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 BushID 0x0 Level(1, Enemy, 1)   [4,4] 0b	0x0 0x01 REDA4R4 [0x0,0x0,0x0,0x0] BushAI
UNIT 

NPCUnits:
UNIT GenericA ClassA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT

ReinforcementUnits:
UNIT Reinforcement0 ClassA 0x0 Level(1, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT 







// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsA) 
MS_TableEntry(0xE0, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsB) 
MS_TableEntry(0xE0, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsC) 
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, GaryUnitsD) 
MS_TableEntry(0xE1, 0, 0, 0, 1, 1, 0, 1, TrainerUnitsA) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT GaryRoute2SChallengeText // 0xE0 
SHORT R2_0xE1_BQ // 0xE1 
TQD_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT GaryRoute2SDefeatText // 0xE0 
SHORT 1500 // Gold 
SHORT R2_0xE1_BD // 0xE1 
SHORT 375 // Gold 
TQD_TableTerminator ; }


GaryBattleUnitGroup:
UNIT 0xE0 blueID 0x0 Level(2, Enemy, 1) [9,29]  0b 0x0	0x0 REDA9R29 [0x2,0x0,0x0,0x0] TrainerBossAI // Item 2 has 1-11 range 
//UNIT GenericB	SquirtleID 0xE0 Level(1, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [JellyDonut,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB	OnixID 0xE0 Level(1, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 

UNIT 

HumanTrainers:
UNIT 0xE1 lassID 0x0 Level(1, Enemy, 1) [4,18]  0b 0x0	0x0 REDA4R18 [0x1,0x0,0x0,0x0] TrainerAI
UNIT 


GaryUnitsA:
UNIT GenericB	BulbasaurID 0xE0 Level(1, Enemy, 1)   [9,9] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	WeedleID 0xE0 Level(1, Enemy, 1)   [11,9]  0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeyID 0xE0 Level(1, Enemy, 1)   [11,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsB:
UNIT GenericB	CharmanderID 0xE0 Level(1, Enemy, 1)   [9,9] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	WeedleID 0xE0 Level(1, Enemy, 1)   [11,9]  0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeyID 0xE0 Level(1, Enemy, 1)   [11,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsC:
UNIT GenericB	SquirtleID 0xE0 Level(1, Enemy, 1)   [9,9] 	0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	WeedleID 0xE0 Level(1, Enemy, 1)   [11,9]  0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeyID 0xE0 Level(1, Enemy, 1)   [11,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsD:
UNIT GenericB	EeveeID 0xE0 Level(1, Enemy, 1)   [9,9] 	0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	WeedleID 0xE0 Level(1, Enemy, 1)   [11,9]  0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeyID 0xE0 Level(1, Enemy, 1)   [11,11] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

TrainerUnitsA:
UNIT GenericB 	RattataID 0xE1 Level(1, Enemy, 1)   [9,12]  0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT GenericB 	PidgeyID 0xE1 Level(1, Enemy, 1)   [11,12] 0b	0x0 0x01 0x0 [0x0,0x0,0x0,0x0] SafestZoningGroupFiveAI
UNIT

	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID