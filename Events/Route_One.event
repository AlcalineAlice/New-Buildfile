#define ChapterID Route1Ch
EventPointerTable(ChapterID,ThisChapter)

ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventPlayer(0,Route1ReinEvent,0,255)

END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
Route1ReinEvent:
Reinforce(0xF0, 2, Route1Rein, 1, 3) 
Reinforce(0xF1, 1, Route1Rein, 4, 1) 
Reinforce(0xF2, 3, Route1Rein, 3, 4) 
NoFade 
ENDA 


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
END_MAIN



LocationBasedEvents:
/*
Vendor(ShopItems,2,7)
Armory(ArmoryItems,10,26)
Village(0x8,VillageEvent,18,27)
House(0,HouseEvent,6,24)
Seize(10,2)
*/
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToViridian [10,0] [13,0] 
AREA 0 ToPallet [12,39] [13,39] 
END_MAIN

{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(11,0) 
EscapeTileEntry(12,0) 
EscapeTileEntry(12,39) 
EscapeTileEntry(13,39) 
EscapeTileTerminator ; } 

ToPallet:
ChapterTransition(PalletCh, 12, 1)

ToViridian:
ChapterTransition(ViridianCh, 19, 37)


// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
CoinsTrap(8,19,ChapterID*2,250)
CoinsTrap(20,35,(ChapterID*2)+1,250)

//CutBush(4,2)
//RockSmash(3,2)
//StrengthBoulder(4,3)

RedPokeballTrap(18,25, ChapterID*2, Vulnerary)
//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 

SignBTrap(14,2, ChapterID, 0x0) //no extra text 
SignATrap(13,34, ChapterID, SignsFastTravel) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(15,11, ChapterID*2, AcrobatID)
//SpellScrollTrap(17,11, (ChapterID*2)+1, Ember)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
SaveCost(12,17) 


BerryTree(20,2,5)
BerryTree(16,15,5)
BerryTree(15,25,5)


Flower(19,2)
Flower(21,2)
Flower(3,6)
Flower(5,6)
Flower(7,6)
Flower(2,7)
Flower(4,7)
Flower(6,7)
Flower(3,8)
Flower(5,8)
Flower(7,8)
Flower(2,9)
Flower(4,9)
Flower(6,9)
Flower(3,11)
Flower(2,12)
Flower(3,13)
Flower(19,18)
Flower(21,18)
Flower(18,19)
Flower(20,19)
Flower(3,27)
Flower(5,27)
Flower(2,28)
Flower(4,28)
Flower(10,34)
Flower(9,35)
Flower(20,34)
Flower(21,35)
ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeCoords(Grass, Range(0,0,5,5), Range(10,6,21,10)) //top patch 
LOAD1 0x1 EnemyUnitsB
ENUN
RandomizeCoords(Grass, Range(0,0,5,5), Range(16,13,21,17)) //upper mid 
LOAD1 0x1 EnemyUnitsC
ENUN
RandomizeCoords(Grass, Range(0,0,5,5), Range(12,24,17,28)) //lower mid 
LOAD1 0x1 EnemyUnitsD
ENUN
RandomizeCoords(Grass, Range(0,0,5,5), Range(2,32,21,37))  //lower 
OffAllUnitState(0x01FF, WillDropItem, Any, EnemyArmy, AnyClass, AnyRange, AnyItem) //Wilds to not drop items 
AutoLevelUnits(1, True, 0x508F) // Wilds  

LOAD1 0x1 EnemyTrainersA
ENUN 
AutoLevelUnits(5, True, 0x90FF) // Trainers given +5 visible levels 
CALL GenericAutolevelEvent // Trainers given invisible levels based on difficulty 


SetUnitStatus(0xF0, AI2Counter, 5)
SetUnitStatus(0xF1, AI2Counter, 5)
SetUnitStatus(0xF2, AI2Counter, 5)
SetUnitStatus(0xF0, CurrentHP, 1)
SetUnitStatus(0xF1, CurrentHP, 1)
SetUnitStatus(0xF2, CurrentHP, 1)
LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 

EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(1, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] WithinTwoZoningAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(1, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(2, Enemy, 1)   [0,2] 001b	0x0 0x01 REDA0R2 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(2, Enemy, 1)   [0,3] 001b	0x0 0x01 REDA0R3 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF0 BushID 0x0 Level(5, Enemy, 1)   [4,4] 0b	0x0 0x01 REDA4R4 [0x0,0x0,0x0,0x0] BushAI
UNIT

EnemyUnitsC:
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(2, Enemy, 1)   [0,4] 001b	0x0 0x01 REDA0R4 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(1, Enemy, 1)   [0,5] 001b	0x0 0x01 REDA0R5 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF1 BushID 0x0 Level(5, Enemy, 1)   [4,4] 0b	0x0 0x01 REDA4R4 [0x0,0x0,0x0,0x0] BushAI
UNIT 

EnemyUnitsD:
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(1, Enemy, 1)   [1,0] 001b	0x0 0x01 REDA1R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(1, Enemy, 1)   [1,1] 001b	0x0 0x01 REDA1R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 0xF2 BushID 0x0 Level(5, Enemy, 1)   [4,4] 0b	0x0 0x01 REDA4R4 [0x0,0x0,0x0,0x0] BushAI 
UNIT

EnemyTrainersA:
//UNIT UnitRouteOneTrainer RattataID 0x0 Level(5, Enemy, 1) [13,1]  0b 0x0	0x0 0x00 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT

NPCUnits:
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
																									
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
																									
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, NPC, 1)   [1,0] 001b	0x0 0x01 REDA10R10 [0x0,0x0,0x0,0x0] AttackInRangeAI

UNIT

Route1Rein:
UNIT UnitRouteOneWild ClassRouteOneWildA 0x0 Level(5, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 


TalkEvent:
Text(0x9DD) 
NoFade
ENDA 

VillageEvent:
	VillageEventItem(VillageText, Village, Boots)

HouseEvent:
	// Set parameters
	SVAL r1 NiceThighsID
	SVAL r2 (-1) // (-1) is active unit
	// Check if unit has skill
	// If they have, goto label #0 (end)
	ASMC (ASMC_HasSkill|1)
	BNE 0 rC r0
	// Learn skill to unit
	ASMC (ASMC_LearnNewSkill|1)
LABEL 0
	Text(HouseText)	
	NoFade
	ENDA
	
#undef ChapterID