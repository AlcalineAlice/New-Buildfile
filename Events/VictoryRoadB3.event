#define ChapterID VictoryRoadB3Ch
#define GenericA UnitVictoryRoadWild
#define GenericB UnitVictoryRoadTrainer
#define ClassA ClassVictoryRoadWildA
#define ClassB ClassVictoryRoadWildB
#define WildLvl 38
#define TrainerL 50




EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)


END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
{ ; ReinforceEntry(ChapterID)
Reinforce(0xF0, 1, ReinforcementUnitsA, 2, 4) 
Reinforce(0xF1, 1, ReinforcementUnitsA, 3, 4) 
}


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(0, ToVictoryRoadB2_NW, 5,2) 
House(0, ToVictoryRoadB2_M, 26,9) 
House(0, ToVictoryRoadB2_E, 29,10) 
House(0, ToVictoryRoadB2_SE, 31,17) 
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
//AFEV 0 RefreshIfNotInDanger 0 
AREA 0 ToVictoryRoadB2_Hole [26,18][26,18]
AREA 0 DropBoulderInHoleEvent [24,16][26,19] 
END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(5,2) 
EscapeTileEntry(26,9) 
EscapeTileEntry(29,10) 
EscapeTileEntry(31,17) 
EscapeTileTerminator ; } 
#endif 

ToVictoryRoadB2_NW:
ChapterTransition(VictoryRoadB2Ch, 4,3)
ToVictoryRoadB2_M:
ChapterTransition(VictoryRoadB2Ch, 25,10)
ToVictoryRoadB2_E:
ChapterTransition(VictoryRoadB2Ch, 30,11)
ToVictoryRoadB2_SE:
ChapterTransition(VictoryRoadB2Ch, 23, 17)
ToVictoryRoadB2_Hole:
EndMMS 
EARTHQUAKE_START 0 // 0 - Sway, 1 - Tremor 
STARTFADE 
FADECOLORS 0x1006 5 135 110 110 // non-sprites? 
FADI 16 
ENDFADE 
EARTHQUAKE_END 
ForcedChapterTransition(VictoryRoadB2Ch, 20,19)


DropBoulderInHoleEvent: 

CHECK_EVENTID VR_BoulderInHoleFlag // if already set, exit 
BNE 99 sC s0 
GetTrapIDAt(26,18)
SVAL s1 StrengthBoulderTrapID 
BNE 99 sC s1 
ASMC 0x80271A1 // SMS_UpdateFromGameData, 0x80271A1
STAL 5 
EARTHQUAKE_START 1
ENUT VR_BoulderInHoleFlag 
RemoveTrap(26,18)
ASMC 0x80271A1 // SMS_UpdateFromGameData, 0x80271A1
STAL 35
EARTHQUAKE_END 
LABEL 99 
NoFade 
ENDA 

// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(22,14,ChapterID*2,1220)
//CoinsTrap(57,15,(ChapterID*2)+1,600)

//VictoryRoadB1: RareCandy, Iron, 2000g
//VictoryRoadB2: Outrage, Protein, Megahorn
//VictoryRoadB3: DarkPulse, MaxPotion 

Rock(12,14) 
RockSmash(32,3)
StrengthBoulder(24,4) 
StrengthBoulder(19,15) 
StrengthBoulder(28,13) 
StrengthBoulder(24,18) // Conditionally deleted 
BoulderReceptacle(7,7, 12,14) // Coord, Affected Rock Coord  

Hole(26, 18) // boulders should come before holes, i think ? 

//StrengthBoulder(4,3)

//StatAccessoryTrap(43, 13, (ChapterID*2), EnhancedWard_BoostIndex) 
//RedPokeballTrap(11,21, (ChapterID*2)+1, ExoticCandy) 
RedPokeballTrap(30,7, (ChapterID*2), MaxPotion) 
//SkillAccessoryTrap(26,4, (ChapterID*2)+1, GaleforceID) 
//SkillAccessoryTrap(13,11, (ChapterID*2), BlossomID) 


//StatAccessoryTrap(14,2, (ChapterID*2)+1, OldWard_BoostIndex)
//SkillAccessoryTrap(37,14, ChapterID*2, DeathBlowID) 
//SkillScrollTrap(18,28, ChapterID*2, StrongRiposteID)

//SkillScrollTrap(27,2, (ChapterID*2)+1, ChivalryID) 

SignBTrap(4,5, ChapterID, 0x0) //no extra text 
SignATrap(26,6, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 



//BerryTree(32,11,5)
//BerryTree(36,11,5)

//SkillScrollTrap(21,9, ChapterID*2, DartingStanceID)
SpellScrollTrap(25,19, (ChapterID*2)+1, DarkPulse)
//OpenPokeball(8,3)
//Sign(8,4, 2)

//Save(10,4)
//SaveCost(47,5) 



//Flower(18,10)


ENDTRAP
ALIGN 4




BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

CHECK_EVENTID VR_BoulderInHoleFlag
BEQ 0 sC s0 
RemoveTrap(24,18) // Boulder was dropped already 
LABEL 0 


LOAD1 0x1 EnemyUnitsA
ENUN
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(2,2,6,13)) 

LOAD1 0x1 EnemyUnitsB
ENUN 
RandomizeEnemyCoords(Ground, Range(0,0,3,3), Range(2,2,6,13)) 
LOAD1 0x1 EnemyBurrows
ENUN 
AutoLevelUnits(WildLvl, True, 0x50FF) // Wilds  

CALL SetBushHpEvent

LABEL 0x63
NoFade
ENDA



ShopItems:
SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 



EnemyUnitsA:
//   UnitID  			ClassID    		Comm   Level,Alleg,AutoL  Coords Spec,ItemD,Mons n/a REDAShort	 ItemWord 			AIWord 
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyUnitsB:
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT GenericA ClassA 0x0 Level(0, Enemy, 1)   [0,1] 001b	0x0 0x01 REDA0R1 [0x0,0x0,0x0,0x0] AttackInRangeAI
UNIT 

EnemyBurrows:
UNIT 0xF0 BurrowID 0x0 Level(0, Enemy, 1)   [28,6]  0b	0x0 0x01 REDA28R6  [0x0,0x0,0x0,0x0] BushAI
UNIT 0xF1 BurrowID 0x0 Level(0, Enemy, 1)   [19,18]  0b	0x0 0x01 REDA19R18  [0x0,0x0,0x0,0x0] BushAI
UNIT 

ReinforcementUnitsA:
UNIT Reinforcement0 ClassA 0x0 Level(0, Enemy, 1)   [0,0] 001b	0x0 0x01 REDA0R0 [0x0,0x0,0x0,0x0] AttackIfWithin2
UNIT 

{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryUnitsA) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryUnitsB) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryUnitsC) 
MS_TableEntry(0xEF, 0, 0, 0, 1, 1, 0, 1, GaryUnitsD) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
BQ(0xF, DebugText)
TDQ_TableTerminator; 

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
BD(0xF, DebugText, 3000) 
TDQ_TableTerminator ; } 

GaryBattleUnitGroup:
UNIT 0xEF blueID 0x0 Level(0, Enemy, 1) [26,4]  0b 0x0	0x1 REDA26R4 [SevenRangeWep,0x0,0x0,0x0] TrainerAI  
//UNIT GenericB	SquirtleID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [JellyDonut,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB	OnixID 0xE0 Level(0, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT 



GaryUnitsA:
UNIT GenericB	VenusaurID 0xEF Level(0, Enemy, 1)   [9,9] 0b	0x0 	0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeotID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ArcanineID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AlakazamID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	NidokingID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	GyaradosID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsB:
UNIT GenericB	CharizardID 0xEF Level(0, Enemy, 1)   [9,9] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeotID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	GyaradosID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AlakazamID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	NidokingID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ExeggutorID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsC:
UNIT GenericB	BlastoiseID 0xEF Level(0, Enemy, 1)   [9,9] 	0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeotID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ArcanineID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AlakazamID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	NidokingID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ExeggutorID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsD:
UNIT GenericB	JolteonID 0xEF Level(0, Enemy, 1)   [9,9] 		0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeotID 0xEF Level(0, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ArcanineID 0xEF Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AlakazamID 0xEF 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	NidokingID 0xEF Level(0, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	ExeggutorID 0xEF Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT


	
#undef GenericA 
#undef GenericB 
#undef ClassA
#undef ClassB
#undef WildLvl
#undef TrainerL
#undef ChapterID