#define ChapterID VermillionCh
#define GenericB UnitCeruleanTrainer
#define WildLvl 10 
#define TrainerL 16 





EventPointerTable(ChapterID,ThisChapter)



ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
TurnEventPlayer(0,GlobalTurnEvent,0,255)
TurnEventPlayer(0,ReinforcementEvent,0,255)

END_MAIN

//Reinforce(BushUnitID, NumberOfEnemies, UnitGroup, GracePeriod, FrequencyInTurns)
ReinforcementEvent:

NoFade 
ENDA 


CharacterBasedEvents:
CharacterEventBothWays(0,GlobalTalkEvent, 0xFF, Ephraim)
AllTrainersPostBattleTalk
END_MAIN



LocationBasedEvents:
House(ThunderbadgeObtained,EnterGym,12,23) //
Vendor(ShopItems,27,11)
//House(0,ClosedArea,7,4) // old rod ? 
//House(0,ClosedArea,10,15) // Fan club 
//House(0,ClosedArea,17,15) //
//House(0,ClosedArea,23,18) //


END_MAIN

EnterGym:
ENUF ThunderbadgeObtained 
CALL ClosedArea
ForcedChapterTransition(VermillionGymCh, 7,24)
NoFade 
ENDA 

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 GlobalAfev 0
//AFEV 0 CityAfev 0
AFEV 0 RefreshIfNotInDanger 0 
//AFEV flagID eventOffset activationFlag
//AREA flagID eventOffset [corner1x, corner1y] [corner2x, corner2y]
AREA 0 ToRoute6 [20,0] [22,0] 
AREA 0 ToRoute11 [41,13] [41,16] 
AREA 0 ToSSAnne [20,33] [22,33] 

END_MAIN
#ifdef MultiTileMarker_Installer
{ ; MultiTileEntry(ChapterID) 
EscapeTileEntry(21,0) 
EscapeTileEntry(41,14) 
EscapeTileEntry(41,15) 
EscapeTileEntry(21,33) 
EscapeTileTerminator ; } 
#endif 

ToRoute6:
ChapterTransition(Route6Ch, 11,39)

ToRoute11:
ChapterTransition(Route11Ch, 0, 9)


ToSSAnne:
ChapterTransition(SSAnneCh, 19,3)





// Allocated 2 traps per chapter, in most cases 
// Eg. 2 skill scrolls, 2 TMs, 2 Coin traps, 2 Pokeball traps 
// Traps that do not reference ram do not have this limit 
// Eg. flowers are not obtained once, so you can spam them 
Traps1:
//CoinsTrap(28,14,ChapterID*2,350)
//CoinsTrap(43,13,(ChapterID*2)+1,400)

CutBush(17,22)
Save(13,3) // Pokecenter 

//RockSmash(3,2)
//StrengthBoulder(4,3)
//StatAccessoryTrap(30,18, ChapterID*2, WiseGlasses_BoostIndex)
//SkillAccessoryTrap(30,18, ChapterID*2, CritUpID)

//GoldPokeballTrap(14,13, (ChapterID*2)+1, Gust) 

SignBTrap(37,12, ChapterID, 0x0) //no extra text 
SignATrap(18,5, ChapterID, 0x0) // Can use ChapterID as the flagID if only using 1 per chapter 

//SkillScrollTrap(15,11, ChapterID*2, AcrobatID)
//SpellScrollTrap(17,11, (ChapterID*2)+1, Ember)
//OpenPokeball(8,3)

BlankExamineTrap(8,22,CeruleanGymSignText)
SignTrap(8,15, CeruleanBicycleShopSignText) // Wooden 



EnterTutTrap(7,4, DoorLockedText) // 
EnterTutTrap(10,15, DoorLockedText) // 
EnterTutTrap(17,15, DoorLockedText) // 
EnterTutTrap(23,18, DoorLockedText) //   


//Flower(10,6)




ENDTRAP
ALIGN 4


BeginningScene:
CALL GlobalBeginningScene
CALL LoadAndPlacePlayers 

CALL CityBeginningScene // Move bonus only when Gary is defeated 

LABEL 0x63
NoFade
ENDA




ALIGN 4
ShopItems:
//SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI 0
BYTE SuperPotion 5 
BYTE JellyDonut 5
BYTE SkillScroll TantivyID 
BYTE SpellScroll AttackPulse SpellScroll WaterGun SpellScroll Growl 
BYTE SpellScroll DoubleHit //SpellScroll Headbutt 
BYTE SpellScroll Gust SpellScroll Magnitude SpellScroll Confusion 
//SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
//SHLI SuperPotion
BYTE $00; ALIGN 4



// ChapterID is defined in each chapter.event. The { } brackets are necessary here. 
{ ; MS_ChTableEntry(ChapterID) // Modular Summon table per chapter 
// MS_TableEntry(UnitID, ClassID, LevelReq, FlagReq, PosType, MatchLvl, ResetStats, AllowDuplicates, UnitGroup)
MS_TableEntry(0xE0, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsA) 
MS_TableEntry(0xE0, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsB) 
MS_TableEntry(0xE0, 0, 0, PlayableCutsceneFlag, 1, 1, 0, 1, GaryUnitsC) 
MS_TableEntry(0xE0, 0, 0, 0, 1, 1, 0, 1, GaryUnitsD) 
MS_TableTerminator ; } 

{ ; TQ_ChEntry(ChapterID) // Trainer's quotes when they spot you 
SHORT GaryCeruleanChallengeText // 0xE0 
SHORT NoCascadeBadgeText // 0xE0 
TQD_TableTerminator

TD_ChEntry(ChapterID) // Trainer's quotes when they're defeated  
SHORT GaryCeruleanDefeatText // 0xE0 
SHORT 2000 // Gold 
SHORT NoCascadeBadgeText // 0xE0 
SHORT 2000 // Gold 
TQD_TableTerminator ; }

GaryBattleUnitGroup:
UNIT 0xE0 blueID 0x0 Level(2, Enemy, 1) [16,0]  0b 0x0	0x1 REDA16R0 [SevenRangeWep,0x0,0x0,0x0] TrainerAI  
//UNIT GenericB	SquirtleID 0xE0 Level(1, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [JellyDonut,0x0,0x0,0x0] PursueWithoutHeedAI 
//UNIT GenericB	OnixID 0xE0 Level(1, Enemy, 1)   [9,30] 	0b	0x0 0x01 REDA9R30 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT 

OfficerUnitGroup:
UNIT 0xE1 policemanID 0x0 Level(2, Enemy, 1) [23,11]  0b 0x0	0x1 REDA23R11 [0x0,0x0,0x0,0x0] DoNothing
UNIT 

GaryUnitsA:
UNIT GenericB	IvysaurID 0xE0 Level(2, Enemy, 1)   [9,9] 0b	0x0 	0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xE0 Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xE0 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeottoID 0xE0 Level(4, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xE0 Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsB:
UNIT GenericB	CharmeleonID 0xE0 Level(2, Enemy, 1)   [9,9] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xE0 Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xE0 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeottoID 0xE0 Level(4, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xE0 Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsC:
UNIT GenericB	WartortleID 0xE0 Level(2, Enemy, 1)   [9,9] 	0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xE0 Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xE0 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeottoID 0xE0 Level(4, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xE0 Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT

GaryUnitsD:
UNIT GenericB	EeveeID 0xE0 Level(2, Enemy, 1)   [9,9] 		0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	RattataID 0xE0 Level(1, Enemy, 1)   [9,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	BeedrillID 0xE0 Level(0, Enemy, 1)   [11,9]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	AbraID 0xE0 	Level(0, Enemy, 1)   [11,10]  0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PidgeottoID 0xE0 Level(4, Enemy, 1)   [11,11] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT GenericB 	PikachuID 0xE0 Level(0, Enemy, 1)   [11,12] 0b	0x0 0x0  0x0 [0x0,0x0,0x0,0x0] PursueWithoutHeedAI 
UNIT




ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4

EndingScene: //Unused but must exist 
NoFade
ENDA

Dunno1:
END_MAIN
Dunno2:
END_MAIN
Dunno3:
END_MAIN
Tutorial:
END_MAIN
Traps2:
ENDTRAP
ALIGN 4

Units1: //only used for a pointless POIN at start 
UNIT Seth  0x7 0x1 0xA1     [0,0] 0b 0x0 0x0 0x0 [0x2,0x3,0x4,0x5] [0x0,0x0,0x0,0x0]
UNIT 






	
#undef GenericB 
#undef WildLvl
#undef TrainerL
#undef ChapterID