
////////////////////////////////////////////////////
//                                                //
// Disassembled with Nintenlord's Event Assembler //
// Version: 11.0.0.0                              //
// Game: FE8                                      //
// File: FE8_clean.gba                            //
// Offset: $9EC66C                                //
//                                                //
////////////////////////////////////////////////////

//EventPointerTable(0x7, PointerList)



setText(0x160, NewChName)

ALIGN 4
NewChName:
String("Debug Room")
BYTE 0





//EventPointerTable(OaksLabCh,ThisChapter)





//EventPointerTable(Route1Ch,ThisChapter)

EventPointerTable(ViridianCh,ThisChapter)
EventPointerTable(Route2SCh,ThisChapter)
EventPointerTable(ViridianForestSCh,ThisChapter)
EventPointerTable(ViridianForestNCh,ThisChapter)



EventPointerTable(CeladonCh                        ,ThisChapter)
EventPointerTable(CeladonGymCh                     ,ThisChapter)
EventPointerTable(CeruleanCh                       ,ThisChapter)
EventPointerTable(CeruleanGymCh                    ,ThisChapter)
EventPointerTable(CinnabarCh                       ,ThisChapter)
EventPointerTable(CinnabarGymCh                    ,ThisChapter)
EventPointerTable(DiglettsCaveCh                   ,ThisChapter)
EventPointerTable(FuschiaCh                        ,ThisChapter)
EventPointerTable(FuschiaGymCh                     ,ThisChapter)
EventPointerTable(LavendarCh                       ,ThisChapter)
EventPointerTable(MtMoonB1Ch                       ,ThisChapter)
EventPointerTable(MtMoonB2Ch                       ,ThisChapter)
EventPointerTable(MtMoonB3Ch                       ,ThisChapter)
EventPointerTable(OaksLabCh                        ,ThisChapter)
EventPointerTable(PalletCh                         ,ThisChapter)
EventPointerTable(PewterCh                         ,ThisChapter)
EventPointerTable(PewterGymCh                      ,ThisChapter)
EventPointerTable(PokecenterCh                     ,ThisChapter)
EventPointerTable(PokemonTowerF1Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF2Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF3Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF4Ch                 ,ThisChapter)
EventPointerTable(PokemonTowerF5Ch                 ,ThisChapter)
EventPointerTable(RockTunnelB1Ch                   ,ThisChapter)
EventPointerTable(RockTunnelB2Ch                   ,ThisChapter)
EventPointerTable(Route1Ch                         ,ThisChapter)
EventPointerTable(Route10Ch                        ,ThisChapter)
EventPointerTable(Route11Ch                        ,ThisChapter)
EventPointerTable(Route12NCh                       ,ThisChapter)
EventPointerTable(Route12SCh                       ,ThisChapter)
EventPointerTable(Route13Ch                        ,ThisChapter)
EventPointerTable(Route14Ch                        ,ThisChapter)
EventPointerTable(Route15Ch                        ,ThisChapter)
EventPointerTable(Route16Ch                        ,ThisChapter)
EventPointerTable(Route17NCh                       ,ThisChapter)
EventPointerTable(Route17SCh                       ,ThisChapter)
EventPointerTable(Route18Ch                        ,ThisChapter)
EventPointerTable(Route19Ch                        ,ThisChapter)
EventPointerTable(Route20ECh                       ,ThisChapter)
EventPointerTable(Route20WCh                       ,ThisChapter)
EventPointerTable(Route21Ch                        ,ThisChapter)
EventPointerTable(Route22Ch                        ,ThisChapter)
EventPointerTable(Route23MCh                       ,ThisChapter)
EventPointerTable(Route23NCh                       ,ThisChapter)
EventPointerTable(Route23SCh                       ,ThisChapter)
EventPointerTable(Route24Ch                        ,ThisChapter)
EventPointerTable(Route25Ch                        ,ThisChapter)
EventPointerTable(Route2NCh                        ,ThisChapter)
EventPointerTable(Route2SCh                        ,ThisChapter)
EventPointerTable(Route3ECh                        ,ThisChapter)
EventPointerTable(Route3MCh                        ,ThisChapter)
EventPointerTable(Route3WCh                        ,ThisChapter)
EventPointerTable(Route4ECh                        ,ThisChapter)
EventPointerTable(Route4MCh                        ,ThisChapter)
EventPointerTable(Route4WCh                        ,ThisChapter)
EventPointerTable(Route5Ch                         ,ThisChapter)
EventPointerTable(Route6Ch                         ,ThisChapter)
EventPointerTable(Route7Ch                         ,ThisChapter)
EventPointerTable(Route8Ch                         ,ThisChapter)
EventPointerTable(Route9ECh                        ,ThisChapter)
EventPointerTable(Route9WCh                        ,ThisChapter)
EventPointerTable(SaffronCh                        ,ThisChapter)
EventPointerTable(SaffronDojoCh                    ,ThisChapter)
EventPointerTable(SaffronGymCh                     ,ThisChapter)
EventPointerTable(SSAnneCh                         ,ThisChapter)
EventPointerTable(VermillionCh                     ,ThisChapter)
EventPointerTable(VermillionGymCh                  ,ThisChapter)
EventPointerTable(ViridianCh                       ,ThisChapter)
EventPointerTable(ViridianForestNCh                ,ThisChapter)
EventPointerTable(ViridianForestSCh                ,ThisChapter)
EventPointerTable(ViridianGymCh                    ,ThisChapter)




ALIGN 4
ThisChapter:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1  //This unit group determines the number and position of deployment slots when there is a prep screen
POIN $0 $0 $0
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
END_MAIN

CharacterBasedEvents:
//CharacterEventBothWays(0x10,TalkEvent, Eirika, Ephraim)
END_MAIN

LocationBasedEvents:
//Vendor(ShopItems,2,7)
//Armory(ArmoryItems,10,26)
//Village(0x8,VillageEvent,18,27)
//House(0,HouseEvent,6,24)
//Seize(10,2)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
AFEV 0 TalkEvent 0
END_MAIN

Dunno1:
END_MAIN

Dunno2:
END_MAIN

Dunno3:
END_MAIN

Tutorial:
END_MAIN

Units1:
UNIT Eirika  BulbasaurID 0x1 Level(5,Ally,True)   [5,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT Ephraim  PidgeyID 0x1 Level(5,Ally,True)  [5,6] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT Seth  RattataID 0x1 Level(5,Ally,True)    [5,7] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT


Units2:
UNIT Amelia MankeyID 0x1 Level(5,Ally,True)   [6,5] 0b 0x0 0x0 0x0 [0x0,0x0,0x0,0x0] [0x0,0x0,0x0,0x0]
UNIT


MoreUnits:
UNIT CaellachCC 0x11 0x1 Level(5,Enemy,True) [0,0] 0b 0x0 0x0 0x0 [0x21,0x29,0x7C,0x0] [0x0,0x0,0x0,0x0]
UNIT


EnemyUnits:
UNIT 0xF2 0x3B 0x40 Level(5,Enemy,True)    [8,7] 0b 0x0 0x0 0x0 [WretchedAir,0x0,0x0,0x0] AttackInRangeAI
UNIT ONeill Fighter 0x40 Level(5,Enemy,True)     [8,14] 0b 0x0 0x0 0x0 [SteelAxe, HandAxe] AttackInRangeAI
UNIT



EnemyUnits2:
UNIT Vigarde General 0x40 0xA5    [3,3] 0 0 0 0 [Spear, SilverBlade, Tomahawk] NeverMoveAI
UNIT



Traps1:
ENDTRAP
ALIGN 4

Traps2:
ENDTRAP
ALIGN 4

#define DebugModeFlag 0xAF 

BeginningScene:
ENUT CasualModeFlag
ENUT DebugModeFlag
ENUF SkipIntroFlag
Write_Byte(16, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(13, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

Write_Byte(6, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(8, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

Write_Byte(7, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(23, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

//Write_Byte(18, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
//Write_Byte(27, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

//Write_Byte(10, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
//Write_Byte(4, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 


SetUnitStatus(Ephraim, State, 0x09) //Undeployed + Dead 


LOAD1 0x1 Units1 //0x0 instead of 0x1 seems to be for allies on maps with prep screens
ENUN
LOAD1 0x1 Units2
ENUN

SilentGiveItemWithDurability(Eirika, SpellScroll,LeafFlurry)
SilentGiveItemWithDurability(Eirika, SkillScroll,AcrobatID)
SilentGiveItemWithDurability(Eirika, Tackle,0x01)
SilentGiveItemWithDurability(Eirika, Berry,0x04)

//SilentGiveItemWithDurability(Eirika, RenewalRing, 1) //|0x40)
SilentGiveItemWithDurability(Eirika, Blackbelt, 1) //|0x40) // Cloak 
SilentGiveItemWithDurability(Seth, Blackbelt, 1) 
SilentGiveItemWithDurability(Seth, Eviolite, 1) 
SilentGiveItemWithDurability(Ephraim, RenewalRing, 1) 
SilentGiveItemWithDurability(Ephraim, QuickClaw, 1) 
SilentGiveItemWithDurability(Amelia, WiseGlasses, 1|0x80) 











//SilentGiveItemWithDurability(Eirika, SpellScroll, MegaDrain)
//SilentGiveItemWithDurability(Eirika, SpellScroll, Pound)
//SilentGiveItemWithDurability(Seth, SpellScroll, Ember)
//SilentGiveItemWithDurability(Eirika, Vulnerary, 1)

//CombineGiveItemWithDurability(Eirika, Vulnerary, 1)


//SilentGiveItem(Eirika, SuperPotion3)
//SilentGiveItem(Eirika, SuperPotion4)

//SilentGiveItem(Eirika, Elixir)

SupplyItem(Tackle)
SupplyItem(LowKick)  
SupplyItem(Ember) 
SupplyItem(WaterGun)
SupplyItem(Thundershock) 
SupplyItem(Absorb) 
SupplyItem(Lick)
SupplyItem(Psychic) 

//SilentGiveItem(Eirika, LowKick)


GOTO 0x63 

ENUT 0x1 //no more boss quotes
ENUT 0x2 //no more death quotes
LOAD1 0x1 EnemyUnits
ENUN
LOAD1 0x1 EnemyUnits2
ENUN

//GotoPrepScreen
Write_Byte(12, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(4, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 

Write_Byte(16, XCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
Write_Byte(13, YCoordNewArea)    //@DUNGEON_STRUCT_STRUCT 
SetUnitStatus(Ephraim, State, 0x09) //Undeployed + Dead 


/*
SupplyItem(Vulnerary) 
SupplyItem(Vulnerary) 
SupplyItem(Vulnerary) 
SupplyItem(Vulnerary) 
*/ //[0902374F]?




LABEL 0x63

AutoLevelUnits(0, True, 0x1FF) // all 
//GotoPrepScreen 
//ENUT SkipIntroFlag
//MNC2 PalletCh 
//MNC2 PokecenterCh 
MNC2 Route1Ch 
//MNC2 ViridianForestSCh
//MNC2 ViridianCh
NoFade
ENDA

TalkEvent:
//SilentGiveItem1
//SilentGiveItem1(Seth, Rapier)
//SilentGiveItem2
//TakeItemAll(SilverLance)


LABEL 0



//SVAL r1 0x0102 	//2nd possible player unit 
//SVAL r3 0x2		//Moved
//ASMC UNCM
//UNCM(0x102, 0x42, 0x01)


CHECK_COORDS 0x01
SADD rB rC r0 
//Text(0x9DD)
//MemSlotToString(rB)
CALL RefreshIfNotInDanger
//UNCR(0x7FFF, 0x42)
//ASMC GetNthUnitID
/*
SVAL r2 0x2 
SCOORD rB [5, 6]
CUSE(0xFFFD)

SCOORD rB [5, 7]
SVAL r2 0xF 
UNCM(0xFFFD, 0x0D)
*/

//SetAllDangerRadius

//SCOORD rB [5, 7]
//SetBadStatus(0xFFFE, 0x55)
//SetUnitStatusAll(0x016A, BadStatus, 0x32, 0x0C, Any, 0x0103, Range(1,1,12,12), 0)
//SetUnitStatusAll(0x016A, BadStatusType, 0x51, 0x0C, 0, 0, 0, 0)
//SetUnitStatusAll(0x016A, BadStatusTurn, 0x96, 0x0C, 0, 0, 0, 0)

//SetUnitStatusAll(0x026A, Item1, Rapier, 0x0C, Enemy, 0, 19,19,20,20)
//MemSlotToString(rA)
//TestSVALThing(5, 10)
SADD r6 rC r0 
//Text(0x9DD)


NoFade
ENDA


EndingScene:
ASMC 0x85C71 0x381F5 0x37CF9 //show records screen
STAL 120
EVBIT_F 0x2
MNTS 0x1 //return to title screen
NoFade
ENDA

VillageEvent:
	VillageEventItem(VillageText, Village, Boots)

HouseEvent:
	// Set parameters
	SVAL r1 NiceThighsID
	SVAL r2 (-1) // (-1) is active unit
	
	// Check if unit has skill
	// If they have, goto label #0 (end)
	ASMC (ASMC_HasSkill|1)
	BNE 0 rC r0
	
	// Learn skill to unit
	ASMC (ASMC_LearnNewSkill|1)
	
LABEL 0
	// end
	
	Text(HouseText)
	
	NoFade
	ENDA
	
	// HouseEvent(HouseText, HouseBG)

#ifdef DRAGON_VEINS
FreezeAllEnemies:
VeinActivation
ASMC FreezeAllASMC|1
NoFade
ENDA
#endif // DRAGON_VEINS



ShopItems:
SHLI Thunder Elfire Nosferatu Divine Mend Physic PureWater Elixir
ALIGN 4

ArmoryItems:
SHLI SteelAxe SteelLance SteelBow SteelSword HandAxe Javelin
ALIGN 4